package org.rascalmpl.ast; 
public class NullASTVisitor<T> implements org.rascalmpl.ast.IASTVisitor<T> {
public T visitNameLexical(org.rascalmpl.ast.Name.Lexical x) { return null; } public T visitEscapedNameLexical(org.rascalmpl.ast.EscapedName.Lexical x) { return null; } public T visitQualifiedNameDefault(org.rascalmpl.ast.QualifiedName.Default x) { return null; } public T visitRegExpLiteralLexical(org.rascalmpl.ast.RegExpLiteral.Lexical x) { return null; } public T visitRegExpModifierLexical(org.rascalmpl.ast.RegExpModifier.Lexical x) { return null; } public T visitBackslashLexical(org.rascalmpl.ast.Backslash.Lexical x) { return null; } public T visitRegExpLexical(org.rascalmpl.ast.RegExp.Lexical x) { return null; } public T visitNamedRegExpLexical(org.rascalmpl.ast.NamedRegExp.Lexical x) { return null; } public T visitNamedBackslashLexical(org.rascalmpl.ast.NamedBackslash.Lexical x) { return null; } public T visitExpressionMap(org.rascalmpl.ast.Expression.Map x) { return null; } public T visitExpressionTuple(org.rascalmpl.ast.Expression.Tuple x) { return null; } public T visitExpressionSet(org.rascalmpl.ast.Expression.Set x) { return null; } public T visitExpressionList(org.rascalmpl.ast.Expression.List x) { return null; } public T visitExpressionQualifiedName(org.rascalmpl.ast.Expression.QualifiedName x) { return null; } public T visitExpressionLiteral(org.rascalmpl.ast.Expression.Literal x) { return null; } public T visitExpressionLexical(org.rascalmpl.ast.Expression.Lexical x) { return null; } public T visitExpressionOr(org.rascalmpl.ast.Expression.Or x) { return null; } public T visitExpressionAnd(org.rascalmpl.ast.Expression.And x) { return null; } public T visitExpressionEquivalence(org.rascalmpl.ast.Expression.Equivalence x) { return null; } public T visitExpressionImplication(org.rascalmpl.ast.Expression.Implication x) { return null; } public T visitExpressionNonEquals(org.rascalmpl.ast.Expression.NonEquals x) { return null; } public T visitExpressionGreaterThanOrEq(org.rascalmpl.ast.Expression.GreaterThanOrEq x) { return null; } public T visitExpressionGreaterThan(org.rascalmpl.ast.Expression.GreaterThan x) { return null; } public T visitExpressionLessThanOrEq(org.rascalmpl.ast.Expression.LessThanOrEq x) { return null; } public T visitExpressionLessThan(org.rascalmpl.ast.Expression.LessThan x) { return null; } public T visitExpressionIn(org.rascalmpl.ast.Expression.In x) { return null; } public T visitExpressionNotIn(org.rascalmpl.ast.Expression.NotIn x) { return null; } public T visitExpressionSubtraction(org.rascalmpl.ast.Expression.Subtraction x) { return null; } public T visitExpressionAddition(org.rascalmpl.ast.Expression.Addition x) { return null; } public T visitExpressionIntersection(org.rascalmpl.ast.Expression.Intersection x) { return null; } public T visitExpressionModulo(org.rascalmpl.ast.Expression.Modulo x) { return null; } public T visitExpressionDivision(org.rascalmpl.ast.Expression.Division x) { return null; } public T visitExpressionJoin(org.rascalmpl.ast.Expression.Join x) { return null; } public T visitExpressionProduct(org.rascalmpl.ast.Expression.Product x) { return null; } public T visitExpressionComposition(org.rascalmpl.ast.Expression.Composition x) { return null; } public T visitExpressionSetAnnotation(org.rascalmpl.ast.Expression.SetAnnotation x) { return null; } public T visitExpressionGetAnnotation(org.rascalmpl.ast.Expression.GetAnnotation x) { return null; } public T visitExpressionTransitiveClosure(org.rascalmpl.ast.Expression.TransitiveClosure x) { return null; } public T visitExpressionTransitiveReflexiveClosure(org.rascalmpl.ast.Expression.TransitiveReflexiveClosure x) { return null; } public T visitExpressionNegative(org.rascalmpl.ast.Expression.Negative x) { return null; } public T visitExpressionNegation(org.rascalmpl.ast.Expression.Negation x) { return null; } public T visitExpressionIsDefined(org.rascalmpl.ast.Expression.IsDefined x) { return null; } public T visitExpressionSubscript(org.rascalmpl.ast.Expression.Subscript x) { return null; } public T visitExpressionFieldProject(org.rascalmpl.ast.Expression.FieldProject x) { return null; } public T visitExpressionFieldAccess(org.rascalmpl.ast.Expression.FieldAccess x) { return null; } public T visitExpressionFieldUpdate(org.rascalmpl.ast.Expression.FieldUpdate x) { return null; } public T visitExpressionReifiedType(org.rascalmpl.ast.Expression.ReifiedType x) { return null; } public T visitExpressionReifyType(org.rascalmpl.ast.Expression.ReifyType x) { return null; } public T visitExpressionStepRange(org.rascalmpl.ast.Expression.StepRange x) { return null; } public T visitExpressionRange(org.rascalmpl.ast.Expression.Range x) { return null; } public T visitExpressionBracket(org.rascalmpl.ast.Expression.Bracket x) { return null; } public T visitExpressionVoidClosure(org.rascalmpl.ast.Expression.VoidClosure x) { return null; } public T visitExpressionClosure(org.rascalmpl.ast.Expression.Closure x) { return null; } public T visitExpressionVisit(org.rascalmpl.ast.Expression.Visit x) { return null; } public T visitExpressionAny(org.rascalmpl.ast.Expression.Any x) { return null; } public T visitExpressionAll(org.rascalmpl.ast.Expression.All x) { return null; } public T visitExpressionIt(org.rascalmpl.ast.Expression.It x) { return null; } public T visitExpressionReducer(org.rascalmpl.ast.Expression.Reducer x) { return null; } public T visitExpressionComprehension(org.rascalmpl.ast.Expression.Comprehension x) { return null; } public T visitExpressionEquals(org.rascalmpl.ast.Expression.Equals x) { return null; } public T visitExpressionEnumerator(org.rascalmpl.ast.Expression.Enumerator x) { return null; } public T visitExpressionNoMatch(org.rascalmpl.ast.Expression.NoMatch x) { return null; } public T visitExpressionMatch(org.rascalmpl.ast.Expression.Match x) { return null; } public T visitExpressionIfDefinedOtherwise(org.rascalmpl.ast.Expression.IfDefinedOtherwise x) { return null; } public T visitExpressionIfThenElse(org.rascalmpl.ast.Expression.IfThenElse x) { return null; } public T visitExpressionNonEmptyBlock(org.rascalmpl.ast.Expression.NonEmptyBlock x) { return null; } public T visitExpressionAnti(org.rascalmpl.ast.Expression.Anti x) { return null; } public T visitExpressionGuarded(org.rascalmpl.ast.Expression.Guarded x) { return null; } public T visitExpressionTypedVariableBecomes(org.rascalmpl.ast.Expression.TypedVariableBecomes x) { return null; } public T visitExpressionVariableBecomes(org.rascalmpl.ast.Expression.VariableBecomes x) { return null; } public T visitExpressionDescendant(org.rascalmpl.ast.Expression.Descendant x) { return null; } public T visitExpressionCallOrTree(org.rascalmpl.ast.Expression.CallOrTree x) { return null; } public T visitExpressionMultiVariable(org.rascalmpl.ast.Expression.MultiVariable x) { return null; } public T visitExpressionTypedVariable(org.rascalmpl.ast.Expression.TypedVariable x) { return null; } public T visitNonterminalLexical(org.rascalmpl.ast.Nonterminal.Lexical x) { return null; } public T visitNonterminalLabelLexical(org.rascalmpl.ast.NonterminalLabel.Lexical x) { return null; } public T visitParameterizedNonterminalLexical(org.rascalmpl.ast.ParameterizedNonterminal.Lexical x) { return null; } public T visitSymCaseInsensitiveLiteral(org.rascalmpl.ast.Sym.CaseInsensitiveLiteral x) { return null; } public T visitSymLiteral(org.rascalmpl.ast.Sym.Literal x) { return null; } public T visitSymCharacterClass(org.rascalmpl.ast.Sym.CharacterClass x) { return null; } public T visitSymColumn(org.rascalmpl.ast.Sym.Column x) { return null; } public T visitSymEndOfLine(org.rascalmpl.ast.Sym.EndOfLine x) { return null; } public T visitSymStartOfLine(org.rascalmpl.ast.Sym.StartOfLine x) { return null; } public T visitSymNonEagerIterStarSep(org.rascalmpl.ast.Sym.NonEagerIterStarSep x) { return null; } public T visitSymNonEagerIterSep(org.rascalmpl.ast.Sym.NonEagerIterSep x) { return null; } public T visitSymIterStarSep(org.rascalmpl.ast.Sym.IterStarSep x) { return null; } public T visitSymIterSep(org.rascalmpl.ast.Sym.IterSep x) { return null; } public T visitSymIterStar(org.rascalmpl.ast.Sym.IterStar x) { return null; } public T visitSymIter(org.rascalmpl.ast.Sym.Iter x) { return null; } public T visitSymOptional(org.rascalmpl.ast.Sym.Optional x) { return null; } public T visitSymLabeled(org.rascalmpl.ast.Sym.Labeled x) { return null; } public T visitSymNonterminal(org.rascalmpl.ast.Sym.Nonterminal x) { return null; } public T visitSymParameter(org.rascalmpl.ast.Sym.Parameter x) { return null; } public T visitSymParametrized(org.rascalmpl.ast.Sym.Parametrized x) { return null; } public T visitRangeFromTo(org.rascalmpl.ast.Range.FromTo x) { return null; } public T visitRangeCharacter(org.rascalmpl.ast.Range.Character x) { return null; } public T visitClassUnion(org.rascalmpl.ast.Class.Union x) { return null; } public T visitClassIntersection(org.rascalmpl.ast.Class.Intersection x) { return null; } public T visitClassDifference(org.rascalmpl.ast.Class.Difference x) { return null; } public T visitClassComplement(org.rascalmpl.ast.Class.Complement x) { return null; } public T visitClassBracket(org.rascalmpl.ast.Class.Bracket x) { return null; } public T visitClassSimpleCharclass(org.rascalmpl.ast.Class.SimpleCharclass x) { return null; } public T visitCharLexical(org.rascalmpl.ast.Char.Lexical x) { return null; } public T visitCommandImport(org.rascalmpl.ast.Command.Import x) { return null; } public T visitCommandDeclaration(org.rascalmpl.ast.Command.Declaration x) { return null; } public T visitCommandExpression(org.rascalmpl.ast.Command.Expression x) { return null; } public T visitCommandStatement(org.rascalmpl.ast.Command.Statement x) { return null; } public T visitCommandShell(org.rascalmpl.ast.Command.Shell x) { return null; } public T visitShellCommandSetOption(org.rascalmpl.ast.ShellCommand.SetOption x) { return null; } public T visitShellCommandHistory(org.rascalmpl.ast.ShellCommand.History x) { return null; } public T visitShellCommandUndeclare(org.rascalmpl.ast.ShellCommand.Undeclare x) { return null; } public T visitShellCommandUnimport(org.rascalmpl.ast.ShellCommand.Unimport x) { return null; } public T visitShellCommandTest(org.rascalmpl.ast.ShellCommand.Test x) { return null; } public T visitShellCommandListDeclarations(org.rascalmpl.ast.ShellCommand.ListDeclarations x) { return null; } public T visitShellCommandListModules(org.rascalmpl.ast.ShellCommand.ListModules x) { return null; } public T visitShellCommandEdit(org.rascalmpl.ast.ShellCommand.Edit x) { return null; } public T visitShellCommandQuit(org.rascalmpl.ast.ShellCommand.Quit x) { return null; } public T visitShellCommandHelp(org.rascalmpl.ast.ShellCommand.Help x) { return null; } public T visitRascalReservedKeywordsLexical(org.rascalmpl.ast.RascalReservedKeywords.Lexical x) { return null; } public T visitStrCharLexical(org.rascalmpl.ast.StrChar.Lexical x) { return null; } public T visitStrCharnewline(org.rascalmpl.ast.StrChar.newline x) { return null; } public T visitStrConLexical(org.rascalmpl.ast.StrCon.Lexical x) { return null; } public T visitSingleQuotedStrCharLexical(org.rascalmpl.ast.SingleQuotedStrChar.Lexical x) { return null; } public T visitSingleQuotedStrConLexical(org.rascalmpl.ast.SingleQuotedStrCon.Lexical x) { return null; } public T visitSymbolSort(org.rascalmpl.ast.Symbol.Sort x) { return null; } public T visitSymbolCaseInsensitiveLiteral(org.rascalmpl.ast.Symbol.CaseInsensitiveLiteral x) { return null; } public T visitSymbolLiteral(org.rascalmpl.ast.Symbol.Literal x) { return null; } public T visitSymbolCharacterClass(org.rascalmpl.ast.Symbol.CharacterClass x) { return null; } public T visitSymbolAlternative(org.rascalmpl.ast.Symbol.Alternative x) { return null; } public T visitSymbolIterStarSep(org.rascalmpl.ast.Symbol.IterStarSep x) { return null; } public T visitSymbolIterSep(org.rascalmpl.ast.Symbol.IterSep x) { return null; } public T visitSymbolIterStar(org.rascalmpl.ast.Symbol.IterStar x) { return null; } public T visitSymbolIter(org.rascalmpl.ast.Symbol.Iter x) { return null; } public T visitSymbolOptional(org.rascalmpl.ast.Symbol.Optional x) { return null; } public T visitSymbolSequence(org.rascalmpl.ast.Symbol.Sequence x) { return null; } public T visitSymbolEmpty(org.rascalmpl.ast.Symbol.Empty x) { return null; } public T visitTypeBracket(org.rascalmpl.ast.Type.Bracket x) { return null; } public T visitTypeSelector(org.rascalmpl.ast.Type.Selector x) { return null; } public T visitTypeUser(org.rascalmpl.ast.Type.User x) { return null; } public T visitTypeVariable(org.rascalmpl.ast.Type.Variable x) { return null; } public T visitTypeFunction(org.rascalmpl.ast.Type.Function x) { return null; } public T visitTypeStructured(org.rascalmpl.ast.Type.Structured x) { return null; } public T visitTypeBasic(org.rascalmpl.ast.Type.Basic x) { return null; } public T visitTypeSymbol(org.rascalmpl.ast.Type.Symbol x) { return null; } public T visitCharRangeRange(org.rascalmpl.ast.CharRange.Range x) { return null; } public T visitCharRangeCharacter(org.rascalmpl.ast.CharRange.Character x) { return null; } public T visitCharRangesBracket(org.rascalmpl.ast.CharRanges.Bracket x) { return null; } public T visitCharRangesConcatenate(org.rascalmpl.ast.CharRanges.Concatenate x) { return null; } public T visitCharRangesRange(org.rascalmpl.ast.CharRanges.Range x) { return null; } public T visitOptCharRangesPresent(org.rascalmpl.ast.OptCharRanges.Present x) { return null; } public T visitOptCharRangesAbsent(org.rascalmpl.ast.OptCharRanges.Absent x) { return null; } public T visitCharClassUnion(org.rascalmpl.ast.CharClass.Union x) { return null; } public T visitCharClassIntersection(org.rascalmpl.ast.CharClass.Intersection x) { return null; } public T visitCharClassDifference(org.rascalmpl.ast.CharClass.Difference x) { return null; } public T visitCharClassComplement(org.rascalmpl.ast.CharClass.Complement x) { return null; } public T visitCharClassBracket(org.rascalmpl.ast.CharClass.Bracket x) { return null; } public T visitCharClassSimpleCharclass(org.rascalmpl.ast.CharClass.SimpleCharclass x) { return null; } public T visitNumCharLexical(org.rascalmpl.ast.NumChar.Lexical x) { return null; } public T visitShortCharLexical(org.rascalmpl.ast.ShortChar.Lexical x) { return null; } public T visitCharacterBottom(org.rascalmpl.ast.Character.Bottom x) { return null; } public T visitCharacterEOF(org.rascalmpl.ast.Character.EOF x) { return null; } public T visitCharacterTop(org.rascalmpl.ast.Character.Top x) { return null; } public T visitCharacterShort(org.rascalmpl.ast.Character.Short x) { return null; } public T visitCharacterNumeric(org.rascalmpl.ast.Character.Numeric x) { return null; } public T visitBodyAnything(org.rascalmpl.ast.Body.Anything x) { return null; } public T visitBodyToplevels(org.rascalmpl.ast.Body.Toplevels x) { return null; } public T visitMappingDefault(org.rascalmpl.ast.Mapping.Default x) { return null; } public T visitStrategyInnermost(org.rascalmpl.ast.Strategy.Innermost x) { return null; } public T visitStrategyOutermost(org.rascalmpl.ast.Strategy.Outermost x) { return null; } public T visitStrategyBottomUpBreak(org.rascalmpl.ast.Strategy.BottomUpBreak x) { return null; } public T visitStrategyBottomUp(org.rascalmpl.ast.Strategy.BottomUp x) { return null; } public T visitStrategyTopDownBreak(org.rascalmpl.ast.Strategy.TopDownBreak x) { return null; } public T visitStrategyTopDown(org.rascalmpl.ast.Strategy.TopDown x) { return null; } public T visitComprehensionMap(org.rascalmpl.ast.Comprehension.Map x) { return null; } public T visitComprehensionList(org.rascalmpl.ast.Comprehension.List x) { return null; } public T visitComprehensionSet(org.rascalmpl.ast.Comprehension.Set x) { return null; } public T visitReplacementConditional(org.rascalmpl.ast.Replacement.Conditional x) { return null; } public T visitReplacementUnconditional(org.rascalmpl.ast.Replacement.Unconditional x) { return null; } public T visitPatternWithActionArbitrary(org.rascalmpl.ast.PatternWithAction.Arbitrary x) { return null; } public T visitPatternWithActionReplacing(org.rascalmpl.ast.PatternWithAction.Replacing x) { return null; } public T visitCaseDefault(org.rascalmpl.ast.Case.Default x) { return null; } public T visitCasePatternWithAction(org.rascalmpl.ast.Case.PatternWithAction x) { return null; } public T visitVisitGivenStrategy(org.rascalmpl.ast.Visit.GivenStrategy x) { return null; } public T visitVisitDefaultStrategy(org.rascalmpl.ast.Visit.DefaultStrategy x) { return null; } public T visitVisibilityDefault(org.rascalmpl.ast.Visibility.Default x) { return null; } public T visitVisibilityPrivate(org.rascalmpl.ast.Visibility.Private x) { return null; } public T visitVisibilityPublic(org.rascalmpl.ast.Visibility.Public x) { return null; } public T visitToplevelGivenVisibility(org.rascalmpl.ast.Toplevel.GivenVisibility x) { return null; } public T visitDeclarationTag(org.rascalmpl.ast.Declaration.Tag x) { return null; } public T visitDeclarationAnnotation(org.rascalmpl.ast.Declaration.Annotation x) { return null; } public T visitDeclarationRule(org.rascalmpl.ast.Declaration.Rule x) { return null; } public T visitDeclarationVariable(org.rascalmpl.ast.Declaration.Variable x) { return null; } public T visitDeclarationFunction(org.rascalmpl.ast.Declaration.Function x) { return null; } public T visitDeclarationTest(org.rascalmpl.ast.Declaration.Test x) { return null; } public T visitDeclarationDataAbstract(org.rascalmpl.ast.Declaration.DataAbstract x) { return null; } public T visitDeclarationData(org.rascalmpl.ast.Declaration.Data x) { return null; } public T visitDeclarationAlias(org.rascalmpl.ast.Declaration.Alias x) { return null; } public T visitDeclarationView(org.rascalmpl.ast.Declaration.View x) { return null; } public T visitAlternativeNamedType(org.rascalmpl.ast.Alternative.NamedType x) { return null; } public T visitVariantNAryConstructor(org.rascalmpl.ast.Variant.NAryConstructor x) { return null; } public T visitTestLabeled(org.rascalmpl.ast.Test.Labeled x) { return null; } public T visitTestUnlabeled(org.rascalmpl.ast.Test.Unlabeled x) { return null; } public T visitFunctionModifierJava(org.rascalmpl.ast.FunctionModifier.Java x) { return null; } public T visitFunctionModifiersList(org.rascalmpl.ast.FunctionModifiers.List x) { return null; } public T visitSignatureWithThrows(org.rascalmpl.ast.Signature.WithThrows x) { return null; } public T visitSignatureNoThrows(org.rascalmpl.ast.Signature.NoThrows x) { return null; } public T visitFunctionDeclarationAbstract(org.rascalmpl.ast.FunctionDeclaration.Abstract x) { return null; } public T visitFunctionDeclarationDefault(org.rascalmpl.ast.FunctionDeclaration.Default x) { return null; } public T visitFunctionBodyDefault(org.rascalmpl.ast.FunctionBody.Default x) { return null; } public T visitVariableInitialized(org.rascalmpl.ast.Variable.Initialized x) { return null; } public T visitVariableUnInitialized(org.rascalmpl.ast.Variable.UnInitialized x) { return null; } public T visitKindAll(org.rascalmpl.ast.Kind.All x) { return null; } public T visitKindTag(org.rascalmpl.ast.Kind.Tag x) { return null; } public T visitKindAnno(org.rascalmpl.ast.Kind.Anno x) { return null; } public T visitKindAlias(org.rascalmpl.ast.Kind.Alias x) { return null; } public T visitKindView(org.rascalmpl.ast.Kind.View x) { return null; } public T visitKindData(org.rascalmpl.ast.Kind.Data x) { return null; } public T visitKindVariable(org.rascalmpl.ast.Kind.Variable x) { return null; } public T visitKindRule(org.rascalmpl.ast.Kind.Rule x) { return null; } public T visitKindFunction(org.rascalmpl.ast.Kind.Function x) { return null; } public T visitKindModule(org.rascalmpl.ast.Kind.Module x) { return null; } public T visitTagStringLexical(org.rascalmpl.ast.TagString.Lexical x) { return null; } public T visitTagCharLexical(org.rascalmpl.ast.TagChar.Lexical x) { return null; } public T visitTagEmpty(org.rascalmpl.ast.Tag.Empty x) { return null; } public T visitTagExpression(org.rascalmpl.ast.Tag.Expression x) { return null; } public T visitTagDefault(org.rascalmpl.ast.Tag.Default x) { return null; } public T visitTagsDefault(org.rascalmpl.ast.Tags.Default x) { return null; } public T visitMarkerLexical(org.rascalmpl.ast.Marker.Lexical x) { return null; } public T visitRestLexical(org.rascalmpl.ast.Rest.Lexical x) { return null; } public T visitLiteralDateTime(org.rascalmpl.ast.Literal.DateTime x) { return null; } public T visitLiteralLocation(org.rascalmpl.ast.Literal.Location x) { return null; } public T visitLiteralString(org.rascalmpl.ast.Literal.String x) { return null; } public T visitLiteralReal(org.rascalmpl.ast.Literal.Real x) { return null; } public T visitLiteralInteger(org.rascalmpl.ast.Literal.Integer x) { return null; } public T visitLiteralBoolean(org.rascalmpl.ast.Literal.Boolean x) { return null; } public T visitLiteralRegExp(org.rascalmpl.ast.Literal.RegExp x) { return null; } public T visitBoundDefault(org.rascalmpl.ast.Bound.Default x) { return null; } public T visitBoundEmpty(org.rascalmpl.ast.Bound.Empty x) { return null; } public T visitStatementGlobalDirective(org.rascalmpl.ast.Statement.GlobalDirective x) { return null; } public T visitStatementNonEmptyBlock(org.rascalmpl.ast.Statement.NonEmptyBlock x) { return null; } public T visitStatementTryFinally(org.rascalmpl.ast.Statement.TryFinally x) { return null; } public T visitStatementTry(org.rascalmpl.ast.Statement.Try x) { return null; } public T visitStatementContinue(org.rascalmpl.ast.Statement.Continue x) { return null; } public T visitStatementFail(org.rascalmpl.ast.Statement.Fail x) { return null; } public T visitStatementBreak(org.rascalmpl.ast.Statement.Break x) { return null; } public T visitStatementVariableDeclaration(org.rascalmpl.ast.Statement.VariableDeclaration x) { return null; } public T visitStatementFunctionDeclaration(org.rascalmpl.ast.Statement.FunctionDeclaration x) { return null; } public T visitStatementAppend(org.rascalmpl.ast.Statement.Append x) { return null; } public T visitStatementInsert(org.rascalmpl.ast.Statement.Insert x) { return null; } public T visitStatementThrow(org.rascalmpl.ast.Statement.Throw x) { return null; } public T visitStatementReturn(org.rascalmpl.ast.Statement.Return x) { return null; } public T visitStatementAssertWithMessage(org.rascalmpl.ast.Statement.AssertWithMessage x) { return null; } public T visitStatementAssert(org.rascalmpl.ast.Statement.Assert x) { return null; } public T visitStatementAssignment(org.rascalmpl.ast.Statement.Assignment x) { return null; } public T visitStatementExpression(org.rascalmpl.ast.Statement.Expression x) { return null; } public T visitStatementEmptyStatement(org.rascalmpl.ast.Statement.EmptyStatement x) { return null; } public T visitStatementVisit(org.rascalmpl.ast.Statement.Visit x) { return null; } public T visitStatementSwitch(org.rascalmpl.ast.Statement.Switch x) { return null; } public T visitStatementIfThen(org.rascalmpl.ast.Statement.IfThen x) { return null; } public T visitStatementIfThenElse(org.rascalmpl.ast.Statement.IfThenElse x) { return null; } public T visitStatementDoWhile(org.rascalmpl.ast.Statement.DoWhile x) { return null; } public T visitStatementWhile(org.rascalmpl.ast.Statement.While x) { return null; } public T visitStatementFor(org.rascalmpl.ast.Statement.For x) { return null; } public T visitStatementSolve(org.rascalmpl.ast.Statement.Solve x) { return null; } public T visitNoElseMayFollowDefault(org.rascalmpl.ast.NoElseMayFollow.Default x) { return null; } public T visitAssignableConstructor(org.rascalmpl.ast.Assignable.Constructor x) { return null; } public T visitAssignableTuple(org.rascalmpl.ast.Assignable.Tuple x) { return null; } public T visitAssignableAnnotation(org.rascalmpl.ast.Assignable.Annotation x) { return null; } public T visitAssignableIfDefinedOrDefault(org.rascalmpl.ast.Assignable.IfDefinedOrDefault x) { return null; } public T visitAssignableFieldAccess(org.rascalmpl.ast.Assignable.FieldAccess x) { return null; } public T visitAssignableSubscript(org.rascalmpl.ast.Assignable.Subscript x) { return null; } public T visitAssignableVariable(org.rascalmpl.ast.Assignable.Variable x) { return null; } public T visitAssignmentIfDefined(org.rascalmpl.ast.Assignment.IfDefined x) { return null; } public T visitAssignmentIntersection(org.rascalmpl.ast.Assignment.Intersection x) { return null; } public T visitAssignmentDivision(org.rascalmpl.ast.Assignment.Division x) { return null; } public T visitAssignmentProduct(org.rascalmpl.ast.Assignment.Product x) { return null; } public T visitAssignmentSubtraction(org.rascalmpl.ast.Assignment.Subtraction x) { return null; } public T visitAssignmentAddition(org.rascalmpl.ast.Assignment.Addition x) { return null; } public T visitAssignmentDefault(org.rascalmpl.ast.Assignment.Default x) { return null; } public T visitLabelDefault(org.rascalmpl.ast.Label.Default x) { return null; } public T visitLabelEmpty(org.rascalmpl.ast.Label.Empty x) { return null; } public T visitDataTargetLabeled(org.rascalmpl.ast.DataTarget.Labeled x) { return null; } public T visitDataTargetEmpty(org.rascalmpl.ast.DataTarget.Empty x) { return null; } public T visitTargetLabeled(org.rascalmpl.ast.Target.Labeled x) { return null; } public T visitTargetEmpty(org.rascalmpl.ast.Target.Empty x) { return null; } public T visitCatchBinding(org.rascalmpl.ast.Catch.Binding x) { return null; } public T visitCatchDefault(org.rascalmpl.ast.Catch.Default x) { return null; } public T visitDeclaratorDefault(org.rascalmpl.ast.Declarator.Default x) { return null; } public T visitLocalVariableDeclarationDynamic(org.rascalmpl.ast.LocalVariableDeclaration.Dynamic x) { return null; } public T visitLocalVariableDeclarationDefault(org.rascalmpl.ast.LocalVariableDeclaration.Default x) { return null; } public T visitSyntaxDefinitionLayout(org.rascalmpl.ast.SyntaxDefinition.Layout x) { return null; } public T visitSyntaxDefinitionLanguage(org.rascalmpl.ast.SyntaxDefinition.Language x) { return null; } public T visitStartPresent(org.rascalmpl.ast.Start.Present x) { return null; } public T visitStartAbsent(org.rascalmpl.ast.Start.Absent x) { return null; } public T visitProdAssociativityGroup(org.rascalmpl.ast.Prod.AssociativityGroup x) { return null; } public T visitProdAll(org.rascalmpl.ast.Prod.All x) { return null; } public T visitProdFirst(org.rascalmpl.ast.Prod.First x) { return null; } public T visitProdFollow(org.rascalmpl.ast.Prod.Follow x) { return null; } public T visitProdReject(org.rascalmpl.ast.Prod.Reject x) { return null; } public T visitProdAction(org.rascalmpl.ast.Prod.Action x) { return null; } public T visitProdUnlabeled(org.rascalmpl.ast.Prod.Unlabeled x) { return null; } public T visitProdLabeled(org.rascalmpl.ast.Prod.Labeled x) { return null; } public T visitProdReference(org.rascalmpl.ast.Prod.Reference x) { return null; } public T visitProdOthers(org.rascalmpl.ast.Prod.Others x) { return null; } public T visitLanguageActionAction(org.rascalmpl.ast.LanguageAction.Action x) { return null; } public T visitLanguageActionBuild(org.rascalmpl.ast.LanguageAction.Build x) { return null; } public T visitAssocAssociative(org.rascalmpl.ast.Assoc.Associative x) { return null; } public T visitAssocNonAssociative(org.rascalmpl.ast.Assoc.NonAssociative x) { return null; } public T visitAssocRight(org.rascalmpl.ast.Assoc.Right x) { return null; } public T visitAssocLeft(org.rascalmpl.ast.Assoc.Left x) { return null; } public T visitProdModifierLexical(org.rascalmpl.ast.ProdModifier.Lexical x) { return null; } public T visitProdModifierBracket(org.rascalmpl.ast.ProdModifier.Bracket x) { return null; } public T visitProdModifierAssociativity(org.rascalmpl.ast.ProdModifier.Associativity x) { return null; } public T visitCommentLexical(org.rascalmpl.ast.Comment.Lexical x) { return null; } public T visitCommentCharLexical(org.rascalmpl.ast.CommentChar.Lexical x) { return null; } public T visitAsteriskLexical(org.rascalmpl.ast.Asterisk.Lexical x) { return null; } public T visitUnicodeEscapeLexical(org.rascalmpl.ast.UnicodeEscape.Lexical x) { return null; } public T visitDecimalIntegerLiteralLexical(org.rascalmpl.ast.DecimalIntegerLiteral.Lexical x) { return null; } public T visitHexIntegerLiteralLexical(org.rascalmpl.ast.HexIntegerLiteral.Lexical x) { return null; } public T visitOctalIntegerLiteralLexical(org.rascalmpl.ast.OctalIntegerLiteral.Lexical x) { return null; } public T visitDecimalLongLiteralLexical(org.rascalmpl.ast.DecimalLongLiteral.Lexical x) { return null; } public T visitHexLongLiteralLexical(org.rascalmpl.ast.HexLongLiteral.Lexical x) { return null; } public T visitOctalLongLiteralLexical(org.rascalmpl.ast.OctalLongLiteral.Lexical x) { return null; } public T visitRealLiteralLexical(org.rascalmpl.ast.RealLiteral.Lexical x) { return null; } public T visitBooleanLiteralLexical(org.rascalmpl.ast.BooleanLiteral.Lexical x) { return null; } public T visitOctalEscapeSequenceLexical(org.rascalmpl.ast.OctalEscapeSequence.Lexical x) { return null; } public T visitStringCharacterLexical(org.rascalmpl.ast.StringCharacter.Lexical x) { return null; } public T visitStringConstantLexical(org.rascalmpl.ast.StringConstant.Lexical x) { return null; } public T visitCaseInsensitiveStringConstantLexical(org.rascalmpl.ast.CaseInsensitiveStringConstant.Lexical x) { return null; } public T visitStringLiteralTemplate(org.rascalmpl.ast.StringLiteral.Template x) { return null; } public T visitStringLiteralInterpolated(org.rascalmpl.ast.StringLiteral.Interpolated x) { return null; } public T visitStringLiteralNonInterpolated(org.rascalmpl.ast.StringLiteral.NonInterpolated x) { return null; } public T visitPreStringCharsLexical(org.rascalmpl.ast.PreStringChars.Lexical x) { return null; } public T visitMidStringCharsLexical(org.rascalmpl.ast.MidStringChars.Lexical x) { return null; } public T visitPostStringCharsLexical(org.rascalmpl.ast.PostStringChars.Lexical x) { return null; } public T visitProtocolCharsLexical(org.rascalmpl.ast.ProtocolChars.Lexical x) { return null; } public T visitPreProtocolCharsLexical(org.rascalmpl.ast.PreProtocolChars.Lexical x) { return null; } public T visitMidProtocolCharsLexical(org.rascalmpl.ast.MidProtocolChars.Lexical x) { return null; } public T visitPostProtocolCharsLexical(org.rascalmpl.ast.PostProtocolChars.Lexical x) { return null; } public T visitPrePathCharsLexical(org.rascalmpl.ast.PrePathChars.Lexical x) { return null; } public T visitMidPathCharsLexical(org.rascalmpl.ast.MidPathChars.Lexical x) { return null; } public T visitPostPathCharsLexical(org.rascalmpl.ast.PostPathChars.Lexical x) { return null; } public T visitPathCharsLexical(org.rascalmpl.ast.PathChars.Lexical x) { return null; } public T visitProtocolPartInterpolated(org.rascalmpl.ast.ProtocolPart.Interpolated x) { return null; } public T visitProtocolPartNonInterpolated(org.rascalmpl.ast.ProtocolPart.NonInterpolated x) { return null; } public T visitPathPartInterpolated(org.rascalmpl.ast.PathPart.Interpolated x) { return null; } public T visitPathPartNonInterpolated(org.rascalmpl.ast.PathPart.NonInterpolated x) { return null; } public T visitLocationLiteralDefault(org.rascalmpl.ast.LocationLiteral.Default x) { return null; } public T visitURLCharsLexical(org.rascalmpl.ast.URLChars.Lexical x) { return null; } public T visitDatePartLexical(org.rascalmpl.ast.DatePart.Lexical x) { return null; } public T visitJustDateLexical(org.rascalmpl.ast.JustDate.Lexical x) { return null; } public T visitTimePartNoTZLexical(org.rascalmpl.ast.TimePartNoTZ.Lexical x) { return null; } public T visitTimeZonePartLexical(org.rascalmpl.ast.TimeZonePart.Lexical x) { return null; } public T visitJustTimeLexical(org.rascalmpl.ast.JustTime.Lexical x) { return null; } public T visitDateAndTimeLexical(org.rascalmpl.ast.DateAndTime.Lexical x) { return null; } public T visitDateTimeLiteralDateAndTimeLiteral(org.rascalmpl.ast.DateTimeLiteral.DateAndTimeLiteral x) { return null; } public T visitDateTimeLiteralTimeLiteral(org.rascalmpl.ast.DateTimeLiteral.TimeLiteral x) { return null; } public T visitDateTimeLiteralDateLiteral(org.rascalmpl.ast.DateTimeLiteral.DateLiteral x) { return null; } public T visitIntegerLiteralOctalIntegerLiteral(org.rascalmpl.ast.IntegerLiteral.OctalIntegerLiteral x) { return null; } public T visitIntegerLiteralHexIntegerLiteral(org.rascalmpl.ast.IntegerLiteral.HexIntegerLiteral x) { return null; } public T visitIntegerLiteralDecimalIntegerLiteral(org.rascalmpl.ast.IntegerLiteral.DecimalIntegerLiteral x) { return null; } public T visitLongLiteralOctalLongLiteral(org.rascalmpl.ast.LongLiteral.OctalLongLiteral x) { return null; } public T visitLongLiteralHexLongLiteral(org.rascalmpl.ast.LongLiteral.HexLongLiteral x) { return null; } public T visitLongLiteralDecimalLongLiteral(org.rascalmpl.ast.LongLiteral.DecimalLongLiteral x) { return null; } public T visitFormalTypeName(org.rascalmpl.ast.Formal.TypeName x) { return null; } public T visitFormalsDefault(org.rascalmpl.ast.Formals.Default x) { return null; } public T visitParametersVarArgs(org.rascalmpl.ast.Parameters.VarArgs x) { return null; } public T visitParametersDefault(org.rascalmpl.ast.Parameters.Default x) { return null; } public T visitProtocolTailPost(org.rascalmpl.ast.ProtocolTail.Post x) { return null; } public T visitProtocolTailMid(org.rascalmpl.ast.ProtocolTail.Mid x) { return null; } public T visitPathTailPost(org.rascalmpl.ast.PathTail.Post x) { return null; } public T visitPathTailMid(org.rascalmpl.ast.PathTail.Mid x) { return null; } public T visitStringTailPost(org.rascalmpl.ast.StringTail.Post x) { return null; } public T visitStringTailMidTemplate(org.rascalmpl.ast.StringTail.MidTemplate x) { return null; } public T visitStringTailMidInterpolated(org.rascalmpl.ast.StringTail.MidInterpolated x) { return null; } public T visitStringMiddleTemplate(org.rascalmpl.ast.StringMiddle.Template x) { return null; } public T visitStringMiddleInterpolated(org.rascalmpl.ast.StringMiddle.Interpolated x) { return null; } public T visitStringMiddleMid(org.rascalmpl.ast.StringMiddle.Mid x) { return null; } public T visitStringTemplateDoWhile(org.rascalmpl.ast.StringTemplate.DoWhile x) { return null; } public T visitStringTemplateWhile(org.rascalmpl.ast.StringTemplate.While x) { return null; } public T visitStringTemplateIfThenElse(org.rascalmpl.ast.StringTemplate.IfThenElse x) { return null; } public T visitStringTemplateIfThen(org.rascalmpl.ast.StringTemplate.IfThen x) { return null; } public T visitStringTemplateFor(org.rascalmpl.ast.StringTemplate.For x) { return null; } public T visitFieldIndex(org.rascalmpl.ast.Field.Index x) { return null; } public T visitFieldName(org.rascalmpl.ast.Field.Name x) { return null; } public T visitModuleDefault(org.rascalmpl.ast.Module.Default x) { return null; } public T visitModuleActualsDefault(org.rascalmpl.ast.ModuleActuals.Default x) { return null; } public T visitImportedModuleDefault(org.rascalmpl.ast.ImportedModule.Default x) { return null; } public T visitImportedModuleRenamings(org.rascalmpl.ast.ImportedModule.Renamings x) { return null; } public T visitImportedModuleActuals(org.rascalmpl.ast.ImportedModule.Actuals x) { return null; } public T visitImportedModuleActualsRenaming(org.rascalmpl.ast.ImportedModule.ActualsRenaming x) { return null; } public T visitRenamingDefault(org.rascalmpl.ast.Renaming.Default x) { return null; } public T visitRenamingsDefault(org.rascalmpl.ast.Renamings.Default x) { return null; } public T visitImportSyntax(org.rascalmpl.ast.Import.Syntax x) { return null; } public T visitImportExtend(org.rascalmpl.ast.Import.Extend x) { return null; } public T visitImportDefault(org.rascalmpl.ast.Import.Default x) { return null; } public T visitModuleParametersDefault(org.rascalmpl.ast.ModuleParameters.Default x) { return null; } public T visitHeaderParameters(org.rascalmpl.ast.Header.Parameters x) { return null; } public T visitHeaderDefault(org.rascalmpl.ast.Header.Default x) { return null; } public T visitBasicTypeDateTime(org.rascalmpl.ast.BasicType.DateTime x) { return null; } public T visitBasicTypeReifiedReifiedType(org.rascalmpl.ast.BasicType.ReifiedReifiedType x) { return null; } public T visitBasicTypeReifiedNonTerminal(org.rascalmpl.ast.BasicType.ReifiedNonTerminal x) { return null; } public T visitBasicTypeReifiedFunction(org.rascalmpl.ast.BasicType.ReifiedFunction x) { return null; } public T visitBasicTypeReifiedConstructor(org.rascalmpl.ast.BasicType.ReifiedConstructor x) { return null; } public T visitBasicTypeReifiedTypeParameter(org.rascalmpl.ast.BasicType.ReifiedTypeParameter x) { return null; } public T visitBasicTypeReifiedAdt(org.rascalmpl.ast.BasicType.ReifiedAdt x) { return null; } public T visitBasicTypeReifiedType(org.rascalmpl.ast.BasicType.ReifiedType x) { return null; } public T visitBasicTypeLex(org.rascalmpl.ast.BasicType.Lex x) { return null; } public T visitBasicTypeTuple(org.rascalmpl.ast.BasicType.Tuple x) { return null; } public T visitBasicTypeRelation(org.rascalmpl.ast.BasicType.Relation x) { return null; } public T visitBasicTypeMap(org.rascalmpl.ast.BasicType.Map x) { return null; } public T visitBasicTypeBag(org.rascalmpl.ast.BasicType.Bag x) { return null; } public T visitBasicTypeSet(org.rascalmpl.ast.BasicType.Set x) { return null; } public T visitBasicTypeList(org.rascalmpl.ast.BasicType.List x) { return null; } public T visitBasicTypeLoc(org.rascalmpl.ast.BasicType.Loc x) { return null; } public T visitBasicTypeVoid(org.rascalmpl.ast.BasicType.Void x) { return null; } public T visitBasicTypeNode(org.rascalmpl.ast.BasicType.Node x) { return null; } public T visitBasicTypeValue(org.rascalmpl.ast.BasicType.Value x) { return null; } public T visitBasicTypeString(org.rascalmpl.ast.BasicType.String x) { return null; } public T visitBasicTypeNum(org.rascalmpl.ast.BasicType.Num x) { return null; } public T visitBasicTypeReal(org.rascalmpl.ast.BasicType.Real x) { return null; } public T visitBasicTypeInt(org.rascalmpl.ast.BasicType.Int x) { return null; } public T visitBasicTypeBool(org.rascalmpl.ast.BasicType.Bool x) { return null; } public T visitTypeArgNamed(org.rascalmpl.ast.TypeArg.Named x) { return null; } public T visitTypeArgDefault(org.rascalmpl.ast.TypeArg.Default x) { return null; } public T visitStructuredTypeDefault(org.rascalmpl.ast.StructuredType.Default x) { return null; } public T visitFunctionTypeTypeArguments(org.rascalmpl.ast.FunctionType.TypeArguments x) { return null; } public T visitTypeVarBounded(org.rascalmpl.ast.TypeVar.Bounded x) { return null; } public T visitTypeVarFree(org.rascalmpl.ast.TypeVar.Free x) { return null; } public T visitUserTypeParametric(org.rascalmpl.ast.UserType.Parametric x) { return null; } public T visitUserTypeName(org.rascalmpl.ast.UserType.Name x) { return null; } public T visitDataTypeSelectorSelector(org.rascalmpl.ast.DataTypeSelector.Selector x) { return null; }
public T visitNameAmbiguity(org.rascalmpl.ast.Name.Ambiguity x) { return null; } public T visitEscapedNameAmbiguity(org.rascalmpl.ast.EscapedName.Ambiguity x) { return null; } public T visitQualifiedNameAmbiguity(org.rascalmpl.ast.QualifiedName.Ambiguity x) { return null; } public T visitRegExpLiteralAmbiguity(org.rascalmpl.ast.RegExpLiteral.Ambiguity x) { return null; } public T visitRegExpModifierAmbiguity(org.rascalmpl.ast.RegExpModifier.Ambiguity x) { return null; } public T visitBackslashAmbiguity(org.rascalmpl.ast.Backslash.Ambiguity x) { return null; } public T visitRegExpAmbiguity(org.rascalmpl.ast.RegExp.Ambiguity x) { return null; } public T visitNamedRegExpAmbiguity(org.rascalmpl.ast.NamedRegExp.Ambiguity x) { return null; } public T visitNamedBackslashAmbiguity(org.rascalmpl.ast.NamedBackslash.Ambiguity x) { return null; } public T visitExpressionAmbiguity(org.rascalmpl.ast.Expression.Ambiguity x) { return null; } public T visitNonterminalAmbiguity(org.rascalmpl.ast.Nonterminal.Ambiguity x) { return null; } public T visitNonterminalLabelAmbiguity(org.rascalmpl.ast.NonterminalLabel.Ambiguity x) { return null; } public T visitParameterizedNonterminalAmbiguity(org.rascalmpl.ast.ParameterizedNonterminal.Ambiguity x) { return null; } public T visitSymAmbiguity(org.rascalmpl.ast.Sym.Ambiguity x) { return null; } public T visitRangeAmbiguity(org.rascalmpl.ast.Range.Ambiguity x) { return null; } public T visitClassAmbiguity(org.rascalmpl.ast.Class.Ambiguity x) { return null; } public T visitCharAmbiguity(org.rascalmpl.ast.Char.Ambiguity x) { return null; } public T visitCommandAmbiguity(org.rascalmpl.ast.Command.Ambiguity x) { return null; } public T visitShellCommandAmbiguity(org.rascalmpl.ast.ShellCommand.Ambiguity x) { return null; } public T visitRascalReservedKeywordsAmbiguity(org.rascalmpl.ast.RascalReservedKeywords.Ambiguity x) { return null; } public T visitStrCharAmbiguity(org.rascalmpl.ast.StrChar.Ambiguity x) { return null; } public T visitStrConAmbiguity(org.rascalmpl.ast.StrCon.Ambiguity x) { return null; } public T visitSingleQuotedStrCharAmbiguity(org.rascalmpl.ast.SingleQuotedStrChar.Ambiguity x) { return null; } public T visitSingleQuotedStrConAmbiguity(org.rascalmpl.ast.SingleQuotedStrCon.Ambiguity x) { return null; } public T visitSymbolAmbiguity(org.rascalmpl.ast.Symbol.Ambiguity x) { return null; } public T visitTypeAmbiguity(org.rascalmpl.ast.Type.Ambiguity x) { return null; } public T visitCharRangeAmbiguity(org.rascalmpl.ast.CharRange.Ambiguity x) { return null; } public T visitCharRangesAmbiguity(org.rascalmpl.ast.CharRanges.Ambiguity x) { return null; } public T visitOptCharRangesAmbiguity(org.rascalmpl.ast.OptCharRanges.Ambiguity x) { return null; } public T visitCharClassAmbiguity(org.rascalmpl.ast.CharClass.Ambiguity x) { return null; } public T visitNumCharAmbiguity(org.rascalmpl.ast.NumChar.Ambiguity x) { return null; } public T visitShortCharAmbiguity(org.rascalmpl.ast.ShortChar.Ambiguity x) { return null; } public T visitCharacterAmbiguity(org.rascalmpl.ast.Character.Ambiguity x) { return null; } public T visitBodyAmbiguity(org.rascalmpl.ast.Body.Ambiguity x) { return null; } public T visitMappingAmbiguity(org.rascalmpl.ast.Mapping.Ambiguity x) { return null; } public T visitStrategyAmbiguity(org.rascalmpl.ast.Strategy.Ambiguity x) { return null; } public T visitComprehensionAmbiguity(org.rascalmpl.ast.Comprehension.Ambiguity x) { return null; } public T visitReplacementAmbiguity(org.rascalmpl.ast.Replacement.Ambiguity x) { return null; } public T visitPatternWithActionAmbiguity(org.rascalmpl.ast.PatternWithAction.Ambiguity x) { return null; } public T visitCaseAmbiguity(org.rascalmpl.ast.Case.Ambiguity x) { return null; } public T visitVisitAmbiguity(org.rascalmpl.ast.Visit.Ambiguity x) { return null; } public T visitVisibilityAmbiguity(org.rascalmpl.ast.Visibility.Ambiguity x) { return null; } public T visitToplevelAmbiguity(org.rascalmpl.ast.Toplevel.Ambiguity x) { return null; } public T visitDeclarationAmbiguity(org.rascalmpl.ast.Declaration.Ambiguity x) { return null; } public T visitAlternativeAmbiguity(org.rascalmpl.ast.Alternative.Ambiguity x) { return null; } public T visitVariantAmbiguity(org.rascalmpl.ast.Variant.Ambiguity x) { return null; } public T visitTestAmbiguity(org.rascalmpl.ast.Test.Ambiguity x) { return null; } public T visitFunctionModifierAmbiguity(org.rascalmpl.ast.FunctionModifier.Ambiguity x) { return null; } public T visitFunctionModifiersAmbiguity(org.rascalmpl.ast.FunctionModifiers.Ambiguity x) { return null; } public T visitSignatureAmbiguity(org.rascalmpl.ast.Signature.Ambiguity x) { return null; } public T visitFunctionDeclarationAmbiguity(org.rascalmpl.ast.FunctionDeclaration.Ambiguity x) { return null; } public T visitFunctionBodyAmbiguity(org.rascalmpl.ast.FunctionBody.Ambiguity x) { return null; } public T visitVariableAmbiguity(org.rascalmpl.ast.Variable.Ambiguity x) { return null; } public T visitKindAmbiguity(org.rascalmpl.ast.Kind.Ambiguity x) { return null; } public T visitTagStringAmbiguity(org.rascalmpl.ast.TagString.Ambiguity x) { return null; } public T visitTagCharAmbiguity(org.rascalmpl.ast.TagChar.Ambiguity x) { return null; } public T visitTagAmbiguity(org.rascalmpl.ast.Tag.Ambiguity x) { return null; } public T visitTagsAmbiguity(org.rascalmpl.ast.Tags.Ambiguity x) { return null; } public T visitMarkerAmbiguity(org.rascalmpl.ast.Marker.Ambiguity x) { return null; } public T visitRestAmbiguity(org.rascalmpl.ast.Rest.Ambiguity x) { return null; } public T visitLiteralAmbiguity(org.rascalmpl.ast.Literal.Ambiguity x) { return null; } public T visitBoundAmbiguity(org.rascalmpl.ast.Bound.Ambiguity x) { return null; } public T visitStatementAmbiguity(org.rascalmpl.ast.Statement.Ambiguity x) { return null; } public T visitNoElseMayFollowAmbiguity(org.rascalmpl.ast.NoElseMayFollow.Ambiguity x) { return null; } public T visitAssignableAmbiguity(org.rascalmpl.ast.Assignable.Ambiguity x) { return null; } public T visitAssignmentAmbiguity(org.rascalmpl.ast.Assignment.Ambiguity x) { return null; } public T visitLabelAmbiguity(org.rascalmpl.ast.Label.Ambiguity x) { return null; } public T visitDataTargetAmbiguity(org.rascalmpl.ast.DataTarget.Ambiguity x) { return null; } public T visitTargetAmbiguity(org.rascalmpl.ast.Target.Ambiguity x) { return null; } public T visitCatchAmbiguity(org.rascalmpl.ast.Catch.Ambiguity x) { return null; } public T visitDeclaratorAmbiguity(org.rascalmpl.ast.Declarator.Ambiguity x) { return null; } public T visitLocalVariableDeclarationAmbiguity(org.rascalmpl.ast.LocalVariableDeclaration.Ambiguity x) { return null; } public T visitSyntaxDefinitionAmbiguity(org.rascalmpl.ast.SyntaxDefinition.Ambiguity x) { return null; } public T visitStartAmbiguity(org.rascalmpl.ast.Start.Ambiguity x) { return null; } public T visitProdAmbiguity(org.rascalmpl.ast.Prod.Ambiguity x) { return null; } public T visitLanguageActionAmbiguity(org.rascalmpl.ast.LanguageAction.Ambiguity x) { return null; } public T visitAssocAmbiguity(org.rascalmpl.ast.Assoc.Ambiguity x) { return null; } public T visitProdModifierAmbiguity(org.rascalmpl.ast.ProdModifier.Ambiguity x) { return null; } public T visitCommentAmbiguity(org.rascalmpl.ast.Comment.Ambiguity x) { return null; } public T visitCommentCharAmbiguity(org.rascalmpl.ast.CommentChar.Ambiguity x) { return null; } public T visitAsteriskAmbiguity(org.rascalmpl.ast.Asterisk.Ambiguity x) { return null; } public T visitUnicodeEscapeAmbiguity(org.rascalmpl.ast.UnicodeEscape.Ambiguity x) { return null; } public T visitDecimalIntegerLiteralAmbiguity(org.rascalmpl.ast.DecimalIntegerLiteral.Ambiguity x) { return null; } public T visitHexIntegerLiteralAmbiguity(org.rascalmpl.ast.HexIntegerLiteral.Ambiguity x) { return null; } public T visitOctalIntegerLiteralAmbiguity(org.rascalmpl.ast.OctalIntegerLiteral.Ambiguity x) { return null; } public T visitDecimalLongLiteralAmbiguity(org.rascalmpl.ast.DecimalLongLiteral.Ambiguity x) { return null; } public T visitHexLongLiteralAmbiguity(org.rascalmpl.ast.HexLongLiteral.Ambiguity x) { return null; } public T visitOctalLongLiteralAmbiguity(org.rascalmpl.ast.OctalLongLiteral.Ambiguity x) { return null; } public T visitRealLiteralAmbiguity(org.rascalmpl.ast.RealLiteral.Ambiguity x) { return null; } public T visitBooleanLiteralAmbiguity(org.rascalmpl.ast.BooleanLiteral.Ambiguity x) { return null; } public T visitOctalEscapeSequenceAmbiguity(org.rascalmpl.ast.OctalEscapeSequence.Ambiguity x) { return null; } public T visitStringCharacterAmbiguity(org.rascalmpl.ast.StringCharacter.Ambiguity x) { return null; } public T visitStringConstantAmbiguity(org.rascalmpl.ast.StringConstant.Ambiguity x) { return null; } public T visitCaseInsensitiveStringConstantAmbiguity(org.rascalmpl.ast.CaseInsensitiveStringConstant.Ambiguity x) { return null; } public T visitStringLiteralAmbiguity(org.rascalmpl.ast.StringLiteral.Ambiguity x) { return null; } public T visitPreStringCharsAmbiguity(org.rascalmpl.ast.PreStringChars.Ambiguity x) { return null; } public T visitMidStringCharsAmbiguity(org.rascalmpl.ast.MidStringChars.Ambiguity x) { return null; } public T visitPostStringCharsAmbiguity(org.rascalmpl.ast.PostStringChars.Ambiguity x) { return null; } public T visitProtocolCharsAmbiguity(org.rascalmpl.ast.ProtocolChars.Ambiguity x) { return null; } public T visitPreProtocolCharsAmbiguity(org.rascalmpl.ast.PreProtocolChars.Ambiguity x) { return null; } public T visitMidProtocolCharsAmbiguity(org.rascalmpl.ast.MidProtocolChars.Ambiguity x) { return null; } public T visitPostProtocolCharsAmbiguity(org.rascalmpl.ast.PostProtocolChars.Ambiguity x) { return null; } public T visitPrePathCharsAmbiguity(org.rascalmpl.ast.PrePathChars.Ambiguity x) { return null; } public T visitMidPathCharsAmbiguity(org.rascalmpl.ast.MidPathChars.Ambiguity x) { return null; } public T visitPostPathCharsAmbiguity(org.rascalmpl.ast.PostPathChars.Ambiguity x) { return null; } public T visitPathCharsAmbiguity(org.rascalmpl.ast.PathChars.Ambiguity x) { return null; } public T visitProtocolPartAmbiguity(org.rascalmpl.ast.ProtocolPart.Ambiguity x) { return null; } public T visitPathPartAmbiguity(org.rascalmpl.ast.PathPart.Ambiguity x) { return null; } public T visitLocationLiteralAmbiguity(org.rascalmpl.ast.LocationLiteral.Ambiguity x) { return null; } public T visitURLCharsAmbiguity(org.rascalmpl.ast.URLChars.Ambiguity x) { return null; } public T visitDatePartAmbiguity(org.rascalmpl.ast.DatePart.Ambiguity x) { return null; } public T visitJustDateAmbiguity(org.rascalmpl.ast.JustDate.Ambiguity x) { return null; } public T visitTimePartNoTZAmbiguity(org.rascalmpl.ast.TimePartNoTZ.Ambiguity x) { return null; } public T visitTimeZonePartAmbiguity(org.rascalmpl.ast.TimeZonePart.Ambiguity x) { return null; } public T visitJustTimeAmbiguity(org.rascalmpl.ast.JustTime.Ambiguity x) { return null; } public T visitDateAndTimeAmbiguity(org.rascalmpl.ast.DateAndTime.Ambiguity x) { return null; } public T visitDateTimeLiteralAmbiguity(org.rascalmpl.ast.DateTimeLiteral.Ambiguity x) { return null; } public T visitIntegerLiteralAmbiguity(org.rascalmpl.ast.IntegerLiteral.Ambiguity x) { return null; } public T visitLongLiteralAmbiguity(org.rascalmpl.ast.LongLiteral.Ambiguity x) { return null; } public T visitFormalAmbiguity(org.rascalmpl.ast.Formal.Ambiguity x) { return null; } public T visitFormalsAmbiguity(org.rascalmpl.ast.Formals.Ambiguity x) { return null; } public T visitParametersAmbiguity(org.rascalmpl.ast.Parameters.Ambiguity x) { return null; } public T visitProtocolTailAmbiguity(org.rascalmpl.ast.ProtocolTail.Ambiguity x) { return null; } public T visitPathTailAmbiguity(org.rascalmpl.ast.PathTail.Ambiguity x) { return null; } public T visitStringTailAmbiguity(org.rascalmpl.ast.StringTail.Ambiguity x) { return null; } public T visitStringMiddleAmbiguity(org.rascalmpl.ast.StringMiddle.Ambiguity x) { return null; } public T visitStringTemplateAmbiguity(org.rascalmpl.ast.StringTemplate.Ambiguity x) { return null; } public T visitFieldAmbiguity(org.rascalmpl.ast.Field.Ambiguity x) { return null; } public T visitModuleAmbiguity(org.rascalmpl.ast.Module.Ambiguity x) { return null; } public T visitModuleActualsAmbiguity(org.rascalmpl.ast.ModuleActuals.Ambiguity x) { return null; } public T visitImportedModuleAmbiguity(org.rascalmpl.ast.ImportedModule.Ambiguity x) { return null; } public T visitRenamingAmbiguity(org.rascalmpl.ast.Renaming.Ambiguity x) { return null; } public T visitRenamingsAmbiguity(org.rascalmpl.ast.Renamings.Ambiguity x) { return null; } public T visitImportAmbiguity(org.rascalmpl.ast.Import.Ambiguity x) { return null; } public T visitModuleParametersAmbiguity(org.rascalmpl.ast.ModuleParameters.Ambiguity x) { return null; } public T visitHeaderAmbiguity(org.rascalmpl.ast.Header.Ambiguity x) { return null; } public T visitBasicTypeAmbiguity(org.rascalmpl.ast.BasicType.Ambiguity x) { return null; } public T visitTypeArgAmbiguity(org.rascalmpl.ast.TypeArg.Ambiguity x) { return null; } public T visitStructuredTypeAmbiguity(org.rascalmpl.ast.StructuredType.Ambiguity x) { return null; } public T visitFunctionTypeAmbiguity(org.rascalmpl.ast.FunctionType.Ambiguity x) { return null; } public T visitTypeVarAmbiguity(org.rascalmpl.ast.TypeVar.Ambiguity x) { return null; } public T visitUserTypeAmbiguity(org.rascalmpl.ast.UserType.Ambiguity x) { return null; } public T visitDataTypeSelectorAmbiguity(org.rascalmpl.ast.DataTypeSelector.Ambiguity x) { return null; }
}