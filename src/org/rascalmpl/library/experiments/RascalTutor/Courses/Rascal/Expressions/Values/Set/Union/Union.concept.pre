concept("Union",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/Union/Union.concept|,[],[],{"Language"},{},""," \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\> + \<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>\n"," \<table\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\>    \</th\>\<th align=\"left\"\>  \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>    \</th\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\> + \<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>      \</th\>\</tr\>\<tr\>\<td align=\"left\"\> \<code\>set[\<i\>T\</i\>\<sub\>1\</sub\>]\</code\> \</td\>\<td align=\"left\"\>  \<code\>set[\<i\>T\</i\>\<sub\>2\</sub\>]\</code\> \</td\>\<td align=\"left\"\> \<code\>set[lub(\<i\>T\</i\>\<sub\>1\</sub\>,\<i\>T\</i\>\<sub\>2\</sub\>)]\</code\>  \</td\>\</tr\>\<tr\>\<td align=\"left\"\> \<code\>set[\<i\>T\</i\>\<sub\>1\</sub\>]\</code\> \</td\>\<td align=\"left\"\>  \<code\>\<i\>T\</i\>\<sub\>2\</sub\>\</code\>      \</td\>\<td align=\"left\"\> \<code\>set[lub(\<i\>T\</i\>\<sub\>1\</sub\>,\<i\>T\</i\>\<sub\>2\</sub\>)]\</code\>  \</td\>\</tr\>\<tr\>\<td align=\"left\"\> \<code\>\<i\>T\</i\>\<sub\>1\</sub\>\</code\>      \</td\>\<td align=\"left\"\>  \<code\>set[\<i\>T\</i\>\<sub\>2\</sub\>]\</code\> \</td\>\<td align=\"left\"\> \<code\>set[lub(\<i\>T\</i\>\<sub\>1\</sub\>,\<i\>T\</i\>\<sub\>2\</sub\>)]\</code\>  \</td\>\</tr\>\</table\>","",{"]",",","[","+","lub","(",")]","set"}," If both \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\> and \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\> have a set as value, the result is the union of these two set values. If one of \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\> or \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\> does not have a set as value, it is first converted to a set before the union is computed.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>{1, 2, 3} + {4, 5, 6};\nset[int]: {6,5,4,3,2,1}\n\<b\>rascal\>\</b\>{1, 2, 3} + 4;\nset[int]: {4,3,2,1}\n\<b\>rascal\>\</b\>1 + { 2, 3, 4};\nset[int]: {4,3,2,1}\n\</pre\>","","",[choiceQuestion("1","  When you compute the union of two sets, the number of elements in the result is always:\n",[good("Greater than or equal the number of elements in both sets."),bad("Greater than the number of elements in both sets."),bad("Smaller than the number of elements in both sets."),bad("Smaller than or equal the number of elements in both sets.")]),tvQuestion("2",typeOfExpr(),details(" ",[],"","","\<A:set[arb[int,str,real]]\> + \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),real(-20,20)]))>,<"B",same("A")>],[],void(),"")),tvQuestion("3",valueOfExpr(),details(" ",[],"","","\<A:set[arb[int,str,real]]\> + \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),real(-20,20)]))>,<"B",same("A")>],[],void(),"")),tvQuestion("4",valueOfExpr(),details(" ",[],"","","\<A\> + "," == \<C\>",false,true,[<"A",set(arb(0,[int(-20,20),str()]))>,<"B",same("A")>],[<"C","\<A\> + \<B\>">],void(),"\<B\>")),tvQuestion("5",valueOfExpr(),details(" ",[],"","","\<A:set[arb[0,int,str,num,real]]\> + \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),num(-20,20),real(-20,20)]))>,<"B",same("A")>],[],void(),""))])