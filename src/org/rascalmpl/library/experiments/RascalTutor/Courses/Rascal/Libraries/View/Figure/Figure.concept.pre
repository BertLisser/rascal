concept("Figure",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Libraries/View/Figure/Figure.concept|,[],[],{},{"EASY"},"","","","",{}," The Figure library provides visualization functionality that\n can be used to synthesize information. \n This plays, for example, a role in the synthesis part of the \<a href=\"/show?concept=EASY\"\>EASY\</a\> paradigm.\n It is based on the following principles:\n \<ul\>\<li\> \<b\>Coordinate free\</b\>: only intrinsic properties of figures such as their height, width or color have to be specified.    Their placement and actual coordinates are computed automatically.\n\</li\>\n\<li\> \<b\>Compositional\</b\>: figures can be composed in many ways.\</li\>\n\<li\> \<b\>Declarative\</b\>: the definition of a figure does not has any side-effects like, for example,    changing the current drawing location or current drawing color.\n\</li\>\n\</ul\> More precisely, figures:\n \<ul\>\<li\> ... are ordinary values that can be computed and manipulated, e.g., by functions.\</li\>\n\<li\> ... only describe their own properties like dimensions and color.\</li\>\n\<li\> ... are unaware of their actual coordinate position.\</li\>\n\<li\> ... can be composed with other figures. Examples are horizontal and vertical composition,    placement on a grid, graph or tree.\n\</li\>\n\<li\> ... can be reused in different contexts.\</li\>\n\</ul\> The Figure library provides two data types:\n \<ul\>\<li\> \<code\>FProperty\</code\> describes a property of a figure such as: \<ul\>\<li\> \<i\>Positioning\</i\>: size, width, height, anchor, hanchor, vanchor, alignment, gap, hgap, vgap, textAngle\</li\>\n\<li\> \<i\>Visual appearance\</i\>: color, lineWidth, lineColor, fillColor, font, fontSize, textColor, connectedShape, closedShape, curvedShape.\n\</li\>\n\<li\> \<i\>Interaction\</i\>: mouseOver, contentsHidden, contentsVisible, pinnend\</li\>\n\<li\> \<i\>Other\</i\>: id\</li\>\n\</ul\>\</li\>\n\<li\> \<code\>Figure\</code\> describes an actual visual element such as: \<ul\>\<li\> \<i\>Primitive\</i\>: text\</li\>\n\<li\> \<i\>(Nested) containers\</i\>: box, ellipse, wedge, space\</li\>\n\<li\> \<i\>Composition\</i\>: hcat, vcat, hvcat, pack, grid, tree, treemap, graph\</li\>\n\</ul\>\</li\>\n\</ul\>","","","",[])