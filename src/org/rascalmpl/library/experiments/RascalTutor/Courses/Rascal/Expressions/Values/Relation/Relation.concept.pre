concept("Relation",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/Relation.concept|,[],[],{"Language"},{"Set"},""," \<code\>{ &lt;\<i\>Exp\</i\>\<sub\>11\</sub\>, \<i\>Exp\</i\>\<sub\>12\</sub\>, ... \> , &lt;\<i\>Exp\</i\>\<sub\>21\</sub\>, \<i\>Exp\</i\>\<sub\>22\</sub\>, ... \> , ... }\</code\>\n"," \<table\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>11\</sub\>\</code\> \</th\>\<th align=\"left\"\>  \<code\>\<i\>Exp\</i\>\<sub\>12\</sub\>\</code\> \</th\>\<th align=\"left\"\>  ...  \</th\>\<th align=\"left\"\> \<code\>{ &lt;\<i\>Exp\</i\>\<sub\>11\</sub\>, \<i\>Exp\</i\>\<sub\>12\</sub\>, ... \> , ... }\</code\>  \</th\>\</tr\>\<tr\>\<td align=\"left\"\> \<code\>\<i\>T\</i\>\<sub\>1\</sub\>\</code\>    \</td\>\<td align=\"left\"\>    \<code\>\<i\>T\</i\>\<sub\>2\</sub\>\</code\>  \</td\>\<td align=\"left\"\>  ...  \</td\>\<td align=\"left\"\>  \<code\>rel[\<i\>T\</i\>\<sub\>1\</sub\>, \<i\>T\</i\>\<sub\>2\</sub\>, ... ]\</code\>              \</td\>\</tr\>\</table\>","",{"\>","}","]","\<",",","{","[","rel"}," A relation is a set of elements with the following property:\n  \<ul\>\<li\> All elements have the same static tuple type.\</li\>\n\</ul\> Relations are thus nothing more than sets of tuples, but since they are used so often we provide a shorthand notation for them.\n Relations are represented by the type \<code\>rel[\<i\>T\</i\>\<sub\>1\</sub\> \<i\>L\</i\>\<sub\>1\</sub\>, \<i\>T\</i\>\<sub\>2\</sub\> \<i\>L\</i\>\<sub\>2\</sub\>, ... ]\</code\>, where \<code\>\<i\>T\</i\>\<sub\>1\</sub\>\</code\>, \<code\>\<i\>T\</i\>\<sub\>2\</sub\>\</code\>, ... are arbitrary types and\n \<code\>\<i\>L\</i\>\<sub\>1\</sub\>\</code\>, \<code\>\<i\>L\</i\>\<sub\>2\</sub\>\</code\>, ... are optional labels. It is a shorthand for \<code\>set[tuple[\<i\>T\</i\>\<sub\>1\</sub\> \<i\>L\</i\>\<sub\>1\</sub\>, \<i\>T\</i\>\<sub\>2\</sub\> \<i\>L\</i\>\<sub\>2\</sub\>, ... ]]\</code\>.\n \<br/\>\n\<br/\>\n\n An n-ary relations with m tuples is denoted by\n  \<code\>{&lt;\<i\>E\</i\>\<sub\>11\</sub\>, \<i\>E\</i\>\<sub\>12\</sub\>, ..., \<i\>E\</i\>\<sub\>1n\</sub\>\>,&lt;\<i\>E\</i\>\<sub\>21\</sub\>, \<i\>E\</i\>\<sub\>22\</sub\>, ..., \<i\>E\</i\>\<sub\>2n\</sub\>\>, ..., &lt;\<i\>E\</i\>\<sub\>m1\</sub\>, \<i\>E\</i\>\<sub\>m2\</sub\>, ..., \<i\>E\</i\>\<sub\>mn\</sub\>\>}\</code\>, \n where the \<code\>\<i\>E\</i\>\<sub\>ij\</sub\>\</code\> are expressions that yield the desired element type \<code\>\<i\>T\</i\>\<sub\>i\</sub\>\</code\>.\n \<br/\>\n\<br/\>\n\n Since relations are a form of set all operations on \<a href=\"/show?concept=Set\"\>Set\</a\>s are also applicable to relations.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>{&lt;1,10&gt;, &lt;2,20&gt;, &lt;3,30&gt;}\nrel[int, int]: {&lt;2,20&gt;,&lt;1,10&gt;,&lt;3,30&gt;}\n\</pre\>\n  instead of rel[int,int] we can also give \<code\>set[tuple[int,int]]\</code\> as type of the above expression\n  remember that these types are interchangeable.\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>{&lt;&quot;a&quot;,10&gt;, &lt;&quot;b&quot;,20&gt;, &lt;&quot;c&quot;,30&gt;}\nrel[str, int]: {&lt;&quot;b&quot;,20&gt;,&lt;&quot;a&quot;,10&gt;,&lt;&quot;c&quot;,30&gt;}\n\<b\>rascal\>\</b\>{&lt;&quot;a&quot;, 1, &quot;b&quot;&gt;, &lt;&quot;c&quot;, 2, &quot;d&quot;&gt;}\nrel[str, int, str]: {&lt;&quot;c&quot;,2,&quot;d&quot;&gt;,&lt;&quot;a&quot;,1,&quot;b&quot;&gt;}\n\</pre\>","","",[])