Name: All

Details:

Categories: Language

Syntax: `all ( $Exp_1$, $Exp_2$, ... )`

Types:
| `$Exp_1$` | `$Exp_2$` | ... | `all ( $Exp_1$, $Exp_2$, ... )` |
|:----------|:----------|:----|:--------------------------------|
|`bool`     | `bool`    | ... | `bool`                          |

Function:

Synopsis:

Description:
Yields `true` when all combinations of values of $Exp_i$ are true.

Examples:
<screen>
// Are all integers 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 even?
all(int n <- [1 .. 10], n % 2 == 0);
// Are all integers 0, 2, 4, 6, 8, 10 even?
all(int n <- [0, 2 .. 10], n % 2 == 0);
</screen>

Benefits:

Pittfalls:
When one of the $Exp_i$ enumerates the elements of an empty list, `all` always returns `false`:
<screen>
all(int n <- [], n > 0);
</screen>

Questions:
