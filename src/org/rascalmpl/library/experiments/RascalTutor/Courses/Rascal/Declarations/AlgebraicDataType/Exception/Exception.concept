Name: Exception

Details:

Categories: Library

Syntax:

Types:

Function:
<listing org/rascalmpl/library/Exception.rsc>

Synopsis:

Description: `RuntimeException` is an [AlgebraicDataType] that describes the _soft_ exceptions that can be caught by a Rascal program.
Since declarations for ADTs are extensible, the user can add new exceptions when needed.

Exception are generated by [Throw] and can be caught by [TryCatch].


Examples:

<screen>
// Import relevant libraries:
import Exception;
import IO;
// Define the map `weekend` and do a subscription with a non-existing key:
weekend = ("saturday": 1, "sunday": 2);
weekend["monday"];
// Repeat this, but catch the exception. We use variable `N` to track what happened:
N = 1;
try {
   N = weekend["monday"];
} catch NoSuchKey(v):
  N = 100;
println(N);
</screen>

Benefits:

Pittfalls:

Questions:

