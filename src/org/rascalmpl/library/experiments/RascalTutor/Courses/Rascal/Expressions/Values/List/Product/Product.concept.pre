concept("Product",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/Product/Product.concept|,[],[],{"Language"},{},""," \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\> * \<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>\n"," \<table\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\>     \</th\>\<th align=\"left\"\>  \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>     \</th\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\> * \<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>         \</th\>\</tr\>\<tr\>\<td align=\"left\"\> \<code\>list[\<i\>T\</i\>\<sub\>1\</sub\>]\</code\> \</td\>\<td align=\"left\"\>  \<code\>list[\<i\>T\</i\>\<sub\>2\</sub\>]\</code\> \</td\>\<td align=\"left\"\> \<code\>list[tuple[\<i\>T\</i\>\<sub\>1\</sub\>,\<i\>T\</i\>\<sub\>2\</sub\>]]\</code\>  \</td\>\</tr\>\</table\>","",{"list","]",",","[","*","tuple","]]"}," Yields a list of tuples resulting from the product of the values of \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\> and \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>. \n It contains a tuple for each combination of values from both arguments.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>[1, 2, 3] * [4, 5, 6];\nlist[tuple[int,int]]: [&lt;1,4&gt;,&lt;1,5&gt;,&lt;1,6&gt;,&lt;2,4&gt;,&lt;2,5&gt;,&lt;2,6&gt;,&lt;3,4&gt;,&lt;3,5&gt;,&lt;3,6&gt;]\n\</pre\>","","",[tvQuestion("1",typeOfExpr(),details(" ",[],"","","\<A:list[arb[int,str]]\> * \<B:same[A]\>","",false,false,[<"A",list(arb(0,[int(-20,20),str()]))>,<"B",same("A")>],[],void(),"")),tvQuestion("2",typeOfExpr(),details(" ",[],"","","\<A:list[arb]\> * \<B:same[A]\>","",false,false,[<"A",list(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),loc(),dateTime()]))>,<"B",same("A")>],[],void(),"")),tvQuestion("3",valueOfExpr(),details(" ",[],"","","\<A:list[arb[0,int,str,num,real]]\> * \<B:same[A]\>","",false,false,[<"A",list(arb(0,[int(-20,20),str(),num(-20,20),real(-20,20)]))>,<"B",same("A")>],[],void(),""))])