concept("Do",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Statements/Do/Do.concept|,[],[],{"Language"},{"Append"},""," \<code\>do \<i\>Statement\</i\> while ( \<i\>Exp\</i\> );\</code\>\n","","",{"do","(",");","while"}," \<code\>\<i\>Statement\</i\>\</code\> is executed repeatedly, as long as the Boolean expression \<code\>\<i\>Exp\</i\>\</code\> yields true. \n Expression \<code\>\<i\>Exp\</i\>\</code\> is executed from scratch in each repetition and only the first true value (if any) is used.\n \<br/\>\n\<br/\>\n\n By default, the value of a do statement is the empty list. \n In general, the value of a do statement consists of all values contributed by \<a href=\"/show?concept=Append\"\>Append\</a\> statements \n that are executed during the repeated execution of its body Statement.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import IO;\nok\n\<b\>rascal\>\</b\>int n = 3;\nint: 3\n\<b\>rascal\>\</b\>do { println(&quot;n = &lt;n&gt;&quot;); n -= 1; } while (n &gt; 0);\nn = 3\nn = 2\nn = 1\nlist[void]: []\n\</pre\>\n  Now build a list result using the \<code\>append\</code\> statement:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>n = 3;\nint: 3\n\<b\>rascal\>\</b\>do { append n * n; n -= 1; } while (n &gt; 0);\nlist[int]: [9,4,1]\n\</pre\>","","",[])