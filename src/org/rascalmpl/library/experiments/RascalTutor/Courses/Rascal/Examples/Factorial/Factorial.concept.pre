concept("Factorial",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Examples/Factorial/Factorial.concept|,[],[],{"Example","Beginner"},{},"","","","",{}," Compute the factorial function.\n"," \<pre class=\"listing\"\>module demo::Factorial\n\n// The factorial function N! = N * (N-1) * (N-2) * ... * 1;\n\npublic int fac(int N)\n{\n  return N &lt;= 0 ? 1 : N * fac(N - 1);\n}\n\</pre\> It uses a conditional statement to distinguish cases and here is how to use it:\n \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import demo::Factorial;\nok\n\<b\>rascal\>\</b\>fac(47);\nint: 258623241511168180642964355153611979969197632389120000000000\n\</pre\> Indeed, Rascal has arbitrary length integers.\n",""," This example illustrates some ordinary programming features in Rascal. It does not highlight Rascal\'\\s specific strength.\n",[])