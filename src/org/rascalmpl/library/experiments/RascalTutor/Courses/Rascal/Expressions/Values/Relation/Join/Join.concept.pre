concept("Join",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/Join/Join.concept|,[],[],{"Language"},{},""," \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\> join \<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>\n"," \<table\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\>                            \</th\>\<th align=\"left\"\>  \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>                            \</th\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\> join \<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>                                            \</th\>\</tr\>\<tr\>\<td align=\"left\"\> \<code\>rel[ \<i\>T\</i\>\<sub\>11\</sub\>, \<i\>T\</i\>\<sub\>12\</sub\>, \<i\>T\</i\>\<sub\>13\</sub\>, ... ]\</code\> \</td\>\<td align=\"left\"\>  \<code\>rel[ \<i\>T\</i\>\<sub\>21\</sub\>, \<i\>T\</i\>\<sub\>22\</sub\>, \<i\>T\</i\>\<sub\>23\</sub\>, ... ]\</code\> \</td\>\<td align=\"left\"\> \<code\>rel[ \<i\>T\</i\>\<sub\>11\</sub\>, \<i\>T\</i\>\<sub\>12\</sub\>, \<i\>T\</i\>\<sub\>13\</sub\>, ..., \<i\>T\</i\>\<sub\>21\</sub\>, \<i\>T\</i\>\<sub\>22\</sub\>, \<i\>T\</i\>\<sub\>23\</sub\>, ... ]\</code\> \</td\>\</tr\>\</table\>","",{"]",",","[","join","rel"}," Relation resulting from the natural join of the relation values of the two arguments.\n This relation contains tuples that are the result from concatenating the elements from both arguments.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>{&lt;1,2&gt;, &lt;10,20&gt;} join {&lt;2,3&gt;};\nrel[int, int, int, int]: {&lt;1,2,2,3&gt;,&lt;10,20,2,3&gt;}\n\<b\>rascal\>\</b\>{&lt;1,2&gt;} join {3, 4};\nrel[int, int, int]: {&lt;1,2,4&gt;,&lt;1,2,3&gt;}\n\</pre\>","","",[tvQuestion("1",typeOfExpr(),details(" ",[],"","","\<A:set[tuple[arb[int,str]]]\> join \<B:set[tuple[arb,str,int]]\>","",false,false,[<"A",set(tuple([arb(0,[int(-20,20),str()])]))>,<"B",set(tuple([arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),loc(),dateTime()]),str(),int(-20,20)]))>],[],void(),"")),tvQuestion("2",valueOfExpr(),details(" ",[],"","","\<A:set[tuple[arb[int,str]]]\> join \<B:set[tuple[arb,str,int]]\>","",false,false,[<"A",set(tuple([arb(0,[int(-20,20),str()])]))>,<"B",set(tuple([arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),loc(),dateTime()]),str(),int(-20,20)]))>],[],void(),""))])