concept("FieldProjection",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Expressions/Operators/FieldProjection/FieldProjection.concept|,[],[],{},{},""," \<code\>\<i\>Exp\</i\> &lt; \<i\>Field\</i\>\<sub\>1\</sub\>, \<i\>Field\</i\>\<sub\>2\</sub\> ... \>\</code\>\n","","",{"\>",",","\<"}," \<code\>\<i\>Exp\</i\>\</code\> should evaluate to a tuple or relation, and \<code\>\<i\>Field\</i\>\<sub\>i\</sub\>\</code\> should be a field name or an integer constant\n  that refers to elements in the order in which they occur in the original value (counting from 0). \n"," Suppose we have a relation with traffic information that records the name of the day, the day number, and the length of the traffic jams at that day.\n \<pre class=\"screen\"\>\<b\>rascal\>\</b\>rel[str day, int daynum, int length] Traffic = \n&gt;&gt;&gt;&gt;&gt;&gt;&gt;{&lt;&quot;mon&quot;, 1, 100&gt;, &lt;&quot;tue&quot;, 2, 150&gt;, &lt;&quot;wed&quot;, 3, 125&gt;, \n&gt;&gt;&gt;&gt;&gt;&gt;&gt; &lt;&quot;thur&quot;, 4, 110&gt;, &lt;&quot;fri&quot;, 5, 90&gt;};\nrel[str day, int daynum, int length]: {&lt;&quot;wed&quot;,3,125&gt;,&lt;&quot;mon&quot;,1,100&gt;,&lt;&quot;fri&quot;,5,90&gt;,&raquo;\n&lt;&quot;thur&quot;,4,110&gt;,&lt;&quot;tue&quot;,2,150&gt;}\n\<b\>rascal\>\</b\>Traffic&lt;length,daynum&gt;;\nrel[int length, int daynum]: {&lt;150,2&gt;,&lt;100,1&gt;,&lt;110,4&gt;,&lt;125,3&gt;,&lt;90,5&gt;}\n\<b\>rascal\>\</b\>Traffic&lt;2,day&gt;;\nrel[int length, str day]: {&lt;100,&quot;mon&quot;&gt;,&lt;90,&quot;fri&quot;&gt;,&lt;150,&quot;tue&quot;&gt;,&lt;125,&quot;wed&quot;&gt;,&lt;110,&quot;&raquo;\nthur&quot;&gt;}\n\</pre\> Field projection thus selects parts from a larger value that has a fixed number of parts. The selection is based on position and not on value and can be used to completely reorder or remove the parts of a larger value.\n","","",[])