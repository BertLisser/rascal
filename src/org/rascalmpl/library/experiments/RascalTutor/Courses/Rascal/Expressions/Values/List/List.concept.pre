concept("List",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/List.concept|,[],[],{"Language","Beginner"},{},""," \<code\>[ \<i\>Exp\</i\>\<sub\>1\</sub\>, \<i\>Exp\</i\>\<sub\>2\</sub\>, ... ]\</code\>\n"," \<table\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\>  \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\> \</th\>\<th align=\"left\"\>  \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\> \</th\>\<th align=\"left\"\>  ...  \</th\>\<th align=\"left\"\>  \<code\>[ \<i\>Exp\</i\>\<sub\>1\</sub\>, \<i\>Exp\</i\>\<sub\>2\</sub\>, ... ]\</code\>   \</th\>\</tr\>\<tr\>\<td align=\"left\"\> \<code\>\<i\>T\</i\>\<sub\>1\</sub\>\</code\>    \</td\>\<td align=\"left\"\> \<code\>\<i\>T\</i\>\<sub\>2\</sub\>\</code\>    \</td\>\<td align=\"left\"\>  ...  \</td\>\<td align=\"left\"\>  \<code\>set[lub(\<i\>T\</i\>\<sub\>1\</sub\>, \<i\>T\</i\>\<sub\>2\</sub\>, ... )]\</code\> \</td\>\</tr\>\</table\>","",{"]",",","[","lub","(",")]","set"}," A list is an ordered sequence of values and has the following properties:\n \<ul\>\<li\> All elements have the same static type.\</li\>\n\<li\> The order of the elements matters.\</li\>\n\<li\> A list may contain an element more than once.\</li\>\n\</ul\> The type of a list has the form \<code\>list[\<i\>T\</i\>]\</code\>,\n where \<code\>\<i\>T\</i\>\</code\> is an arbitrary type.\n \<br/\>\n\<br/\>\n\n When variables of type list occur inside a list, their elements are automatically \<i\>spliced\</i\> into the surrounding set. This can be prevented by surrounding them with extra \<code\>[\</code\> and \<code\>]\</code\> brackets. Note that this approach is atypical: in Rascal splicing is implicit while in other languages it has to be indicated explicitly by the programmer.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>[1, 2, 3];\nlist[int]: [1,2,3]\n\<b\>rascal\>\</b\>[&lt;1,10&gt;, &lt;2,20&gt;, &lt;3,30&gt;];\nlist[tuple[int,int]]: [&lt;1,10&gt;,&lt;2,20&gt;,&lt;3,30&gt;]\n\<b\>rascal\>\</b\>[1, &quot;b&quot;, 3];\nlist[value]: [1,&quot;b&quot;,3]\n\<b\>rascal\>\</b\>[&lt;&quot;a&quot;,10&gt;, &lt;&quot;b&quot;,20&gt;, &lt;&quot;c&quot;,30&gt;];\nlist[tuple[str,int]]: [&lt;&quot;a&quot;,10&gt;,&lt;&quot;b&quot;,20&gt;,&lt;&quot;c&quot;,30&gt;]\n\<b\>rascal\>\</b\>[[&quot;a&quot;, &quot;b&quot;], [&quot;c&quot;, &quot;d&quot;, &quot;e&quot;]];\nlist[list[str]]: [[&quot;a&quot;,&quot;b&quot;],[&quot;c&quot;,&quot;d&quot;,&quot;e&quot;]]\n\</pre\> List splicing works as follows:\n \<pre class=\"screen\"\>\<b\>rascal\>\</b\>L = [1, 2, 3];\nlist[int]: [1,2,3]\n\<b\>rascal\>\</b\>[10, L, 20];\nlist[int]: [10,1,2,3,20]\n\<b\>rascal\>\</b\>[10, [L], 20];\nlist[value]: [10,[1,2,3],20]\n\</pre\>","","",[])