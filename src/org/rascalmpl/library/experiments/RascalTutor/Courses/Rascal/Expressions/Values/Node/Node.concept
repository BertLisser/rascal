Name: Node

Details:

Categories: Language

Syntax: `$Exp_0$ ( $Exp_1$, $Exp_2$, ... )`

Types:
|`$Exp_0$`  | `$Exp_1$` | `$Exp_2$` | ... | `$Exp_0$ ( $Exp_1$, $Exp_2$, ... )` |
|:----------|:----------|:----------|:----|:------------------------------------|
| `str`     | `value`   | `value`   | ... | `node`                              |

Function:

Synopsis:

Description: Values of type `node` represent untyped trees and are constructed as follows:
* the string value of $Exp_0$ is the node name;
* zero or more expressions of type `value` are the node\'s children.


Nodes can have [Annotation]s.

Examples:
<screen>
// A node with name "my_node" and three arguments
"my_node"(1, true, "abc");
// A nested node structure:
"my_node1"(1, "my_node2"(3.5, ["a", "b", "c"]), true);
</screen>

Benefits:

Pittfalls:

Questions:

