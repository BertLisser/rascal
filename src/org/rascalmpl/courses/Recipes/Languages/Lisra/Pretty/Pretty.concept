Name: Pretty

Synopsis: A Lisp pretty printer.

Syntax:

Types:

Function:
       
Usage:

Details:

Description:
The purpose of a pretty printer is to convert an internal structure to text.
We define here the simplest possible solution:

<listing demo/lang/Lisra/Pretty.rsc>

Compare the definition of `pretty` with that of `parse`:
<listing>
Lval parse(str txt);
str pretty(Lval x);
</listing>

For a well-designed pair of `parse`/`pretty` functions, the latter is the inverse of the former.
In other words, for every `L` the following should hold:
<listing>
parse(pretty(L)) == L
</listing>

Examples:

<screen>
import demo::lang::Lisra::Runtime;
import demo::lang::Lisra::Pretty;
pretty(Integer(42));
pretty(Atom("x"));
L = List([Atom("+"), Integer(5), Integer(7)]);
pretty(L);
// Now let's explore whether `pretty` is indeed the inverse of `parse`:
import demo::lang::Lisra::Parse;
parse(pretty(L)) == L;
</screen>

Benefits:

Pitfalls:

Questions:

       
