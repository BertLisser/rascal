Name: Visualize

Synopsis: Visualize Pico Control Flow Graphs.

Syntax:

Types:

Function:
       
Usage:

Details:

Description:

Examples:
<listing demo/lang/Pico/Visualize.rsc>
* We want to include the text of expressions in the relevant Figure nodes, this is achieved by `make`  (/*1*/)
* An editor property is attached to each Figure node (/*2*/): clicking on the node opens an editor for the corresponding file.
* `visNode` implements the visualization per CFG node (/*3*/).
* Since Figure nodes in a visual graph need an `id` property, we define here a scheme to associate unique identifiers to each Figure node (/*4*/).
* The complete visualization of a CFG is implemented by `visCFG` (/*5*/): it gets the CFG hraph as arguments and then
  ** creates all Figure edges,
  ** creates all Figure nodes,
  ** returns a Figure graph.


Let's now apply this:
<figure cfg1.png>
import demo::lang::Pico::ControlFlow;
import demo::lang::Pico::Visualize;
CFG = cflowProgram("begin declare n : natural, s : string; n := 10; s := \"a\"; while n do s := s + \"a\"; n := n - 1 od end");
render(visCFG(CFG.graph));
</figure>

The resulting visualization looks like this: 

![Control flow graph](cfg1.png)
Benefits:

Pitfalls:

Questions:

       
