Name: Eval1

Synopsis:

Syntax:

Types:

Function:

Details:

Description:
Interpreter Eval1 supports the following features of Func: 


| Feature              | Eval1 |
|:---------------------|-------|
| function declaration | y     |
| integer constant     | y     |
| variable             | y     |
| arithmetic operators | y     |
| comparison operators | y     |
| call                 | y     |
| if                   | y     |
| __let__              | y     |
| sequence             |       |
| assignment           |       |
| address operator     |       |
| dereference operator |       |



In particular, the let construct is supported and this requires the addition
of an extra environment for <name, value> bindings.
Examples:
<listing demo/lang/Func/Eval1.rsc>

* The alias `Env` is introduced at /*1*/ that maps strings to integers.
* All evaluation function get an extra Env argument.
* The environment is used to retrieve a variable's value at /*2*/.
* The environment is extended with new bindings at /*3*/


Let's try this with F1:
<listing demo/lang/Func/programs/F1.func>
The result:
<screen>
import demo::lang::Func::Load;
import demo::lang::Func::Eval1;
import demo::lang::Func::programs::F1;
eval1("fact", [10], load(F1));
</screen>

Benefits:

Pitfalls:

Questions:

       
