concept("Help",|tutor:///Rascal/InstallingAndRunning/Running/Help/Help.concept|,[],[],{},"","","","",{}," Various forms of help are available.\n \<br/\>\n\<br/\>\n\n At the command console, type \<b\>:help\</b\> to get a list of help commands.\n \<br/\>\n\<br/\>\n\n In the Eclipse environment, select the menu \<code\>Rascal \> Start Tutor\</code\> to start\n the interactive Rascal Tutor.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>:help\nWelcome to the Rascal command shell.\nShell commands:\n:help                      Prints this message\n:quit or EOF               Quits the shell\n:declarations              Lists all visible rules, functions and variables\n:set &lt;option&gt; &lt;expression&gt; Sets an option\ne.g. profiling    true/false\n     tracing      true/false\n:edit &lt;modulename&gt;         Opens an editor for that module\n:modules                   Lists all imported modules\n:test                      Runs all unit tests currently loaded\n:unimport &lt;modulename&gt;     Undo an import\n:undeclare &lt;name&gt;          Undeclares a variable or function introduced in the s&raquo;\nhell\n:history                   Print the command history\nExample rascal statements and declarations:\n1 + 1;                     Expressions simply print their output and (static) ty&raquo;\npe\nint a;                     Declarations allocate a name in the current scope\na = 1;                     Assignments store a value in a (optionally previously&raquo;\n declared) variable\nint a = 1;                 Declaration with initialization\nimport IO;                 Importing a module makes its public members available&raquo;\n\nprintln(&quot;Hello World&quot;)     Function calling\nPlease read the manual for further information\nok\n\</pre\>","","",[])