Name: Precede

Synopsis:

Syntax: 

# `$constraint$ << $Symbol$` 
# `$constraint$ !<< $Symbol$`


where a $constraint$ is any character class, a literal or a keyword non-terminal [$SyntaxDefinition/Symbol].

Types:

Function:

Details:

Description: Using `<<`, the parser will not accept the $Symbol$ if it is not immediately preceded by the $terminal$ in the input string. If the start of the symbol coincides with start of the inout, the constraint will fail and the symbol will not be accepted.

Using `!<<`, the parser will not accept the $Symbol$ if it is immediately preceded by the $terminal$ in the input string. If the start of the symbol coincides with start of the inout, the constraint will always succeed and the symbol is accepted.


Examples:

Benefits:

Pitfalls:

Questions:

       
