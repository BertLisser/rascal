Name: VariableDeclaration

Synopsis: Variable declaration in abstract pattern.

Syntax: `$Type$ $Var$`

Types:

Function:

Details:

Description:

A variable declaration
<listing>
$Type$ $Var$
</listing>
can be used as abstract pattern.
A variable declaration introduces a new variable $Var$ that matches any value of the given type $Type$.
That value is assigned to $Var$ when the whole match succeeds.

The scope of this variable is the outermost expression in which the pattern occurs
or the enclosing [If], [While], or [Do] if the pattern occurs in the test expression of those statements.

Examples:
Let's first perform a match that succeeds:
<screen errors>
str S := "abc";
//and now we attempt to inspect the value of `S`:
S;
// As mentioned above: `S` is only bound in the scope of the match expression!
</screen>
Let's explore how bindings work in an if statement:
<screen>
import IO;
if(str S := "abc")
   println("Match succeeds, S == \"<S>\"");
</screen>

Benefits:

Pitfalls:

Questions:

       
