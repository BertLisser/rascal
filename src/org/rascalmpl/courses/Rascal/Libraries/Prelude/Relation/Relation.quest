[tvQuestion("Rascal/Libraries/Prelude/Relation","1",valueOfExpr(),details(" Fill in the missing function name.\n",["import Relation;"],"","","","(\<R\>) == \<H\>",false,true,[<"R",set(tuple([arb(0,[int(-20,20),str()]),arb(0,[int(-20,20),str()])]),1,5)>],[<"H","invert(\<R\>)">],void(),"invert")),tvQuestion("Rascal/Libraries/Prelude/Relation","2",valueOfExpr(),details(" Fill in the missing function name.\n",["import Relation;"],"","","","(\<R\>) == \<H\>",false,true,[<"R",set(tuple([str(),int(-20,20)]),1,5)>],[<"H","range(\<R\>)">],void(),"range")),tvQuestion("Rascal/Libraries/Prelude/Relation","3",valueOfExpr(),details(" Fill in the missing function name.\n",["import Relation;"],"","","","(\<S\>) == \<H\>",false,true,[<"S",set(int(0,20),3,4)>],[<"H","ident(\<S\>) ">],void(),"ident")),tvQuestion("Rascal/Libraries/Prelude/Relation","4",valueOfExpr(),details(" Fill in the missing function name.\n",["import Relation;"],"","","","(\<R\>) == \<H\>",false,true,[<"R",set(tuple([str(),int(-20,20)]),1,5)>],[<"H","domain(\<R\>)">],void(),"domain")),tvQuestion("Rascal/Libraries/Prelude/Relation","5",valueOfExpr(),details(" Fill in the missing function name.\n",["import Relation;"],"","","","(\<R\>) == \<H\>",false,true,[<"R",set(tuple([str(),int(-20,20)]),1,5)>],[<"H","carrier(\<R\>)">],void(),"carrier"))]