[choiceQuestion("Rascal/Libraries/Prelude/List/take","1","  Computing \<code\>take(M, L)\</code\> of a list with \<code\>\<i\>N\</i\>\</code\> (\<code\>\<i\>N\</i\>\</code\> \> \<code\>\<i\>M\</i\>\</code\>) elements returns a list with\n",[good("M elements."),bad("N-M elements."),bad("N elements."),bad("N * M elements.")]),tvQuestion("Rascal/Libraries/Prelude/List/take","2",typeOfExpr(),details(" ",["import List;"],"","","take(\<N\>, \<L\>)","",false,false,[<"L",list(arb(0,[bool(),int(-20,20),str()]),4,6)>,<"N",int(0,3)>],[],void(),"")),tvQuestion("Rascal/Libraries/Prelude/List/take","3",valueOfExpr(),details(" ",["import List;"],"","","take(\<N\>, \<L\>) == ","",false,true,[<"L",list(arb(0,[bool(),int(-20,20),str()]),4,6)>,<"N",int(0,3)>],[<"H","take(\<N\>, \<L\>)">],void(),"\<H\>"))]