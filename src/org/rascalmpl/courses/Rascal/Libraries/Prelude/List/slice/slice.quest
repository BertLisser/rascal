[choiceQuestion("Rascal/Libraries/Prelude/List/slice","1","  Computing \<code\>slice(L, B, N)\</code\> returns a list with:\n",[good("N elements."),bad("B elements."),bad("B + N elements."),bad("N - 1 elements."),bad("B - 1 elements.")]),tvQuestion("Rascal/Libraries/Prelude/List/slice","2",typeOfExpr(),details(" ",["import List;"],"","","slice(\<L\>,\<B\>,\<E\>)","",false,false,[<"L",list(arb(0,[int(-20,20),str()]),3,5)>,<"B",int(0,2)>,<"E",int(2,5)>],[],void(),"")),tvQuestion("Rascal/Libraries/Prelude/List/slice","3",valueOfExpr(),details(" ",["import List;"],"","","slice(\<L\>,\<B\>,\<E\>) == ","",false,true,[<"L",list(arb(0,[int(-20,20),str()]),3,5)>,<"B",int(0,2)>,<"E",int(2,5)>],[<"H","slice(\<L\>,\<B\>,\<E\>)">],void(),"\<H\>"))]