Name: Outline

Synopsis: An outline is an IDE view with hyperlinks that quickly visualizes an outline of a source code file

Syntax:

Types:

Function:

Details:

Description: To implement an outline, first make a function that maps a [ParseTree] to anything of `node` or a sub-type of `node` (any [AlgebraicDataType] or [SyntaxDefinition] will do).

The structure of the outline tree that you make will be displayed directly by the outline view in the IDE. 
To provide labels to the nodes use the [$IDE/label] annotation (type `str`). 
To make the node a hyperlink, use the [$IDE/loc] annotation.

Then, register the outliner:
<screen>
import util::IDE;
syntax Program = "main";
registerOutliner("myLanguage", node (Program t) { 
  n = "myNode"();
  n@\loc = t@\loc;
  n@label = "My node label";
  return n;
});
</screen>

Examples:

Benefits:

Pitfalls:

Questions:

