Name: box

Synopsis: A rectangular box.

Syntax:

Types:

Function:
# `Figure box(FProperty props...)`
# `Figure box(Figure inner, FProperty props...)`

Details:

Description:
Draw a rectangular box using the properties `props`.
An optional nested figure `inner` may be placed inside the box.

Examples:
Lets start with a box `b0` of given (minimal) dimensions:
<figure box0.png>
b0 = box(size(150,50), fillColor("lightGray"));
render(b0);
</figure>
that will display as: ![box0](box0.png)

We can nest a new box `b1` in box `b0` as follows:
<figure box1.png>
b1 = box(shrink(0.8), fillColor("green"));
b0 = box(b1, size(150,50), fillColor("lightGray"));
render(b0);
</figure>
The result is: ![box1](box1.png)

Note that:
* Box `b0` contains box `b1`.
* The dimensions of `b1` are determined by  shrinking to 80% of the dimensions of `b0`.
 

The placement of an inner figure is determined by alignment, see [align]. 
We can, for instance, place `b1` in the top left corner of `b0`:
<figure box2.png>
b1 = box(shrink(0.8), align(0, 0), fillColor("green"));
b0 = box(b1, size(150,50), fillColor("lightGray"));
render(b0);
</figure>
The result is: ![box2](box2.png)

Placing `b1` in the bottom right corner of `b0`:
<figure box3.png>
b1 = box(shrink(0.8), align(1, 1), fillColor("green"));
b0 = box(b1, size(150,50), fillColor("lightGray"));
render(b0);
</figure>
gives: ![box3](box3.png)

We can also nest box `b0` in another box `b2` and make `b2` 20% larger than `b0`:
<figure box4.png>
b0 = box(size(150,50), fillColor("lightGray"));
b2 = box(b0, grow(1.2), fillColor("blue"));
render(b2);
</figure>
The result is: ![box4](box4.png)

If no sizes are given at all then the box will expand to fill the available size:

<figure box5.png 400x400>
render(box(box(box(box(shrink(0.5)),shrink(0.5)),shrink(0.5))));
</figure>
The result is: ![box5](box5.png)

Benefits:

Pitfalls:

Questions:

