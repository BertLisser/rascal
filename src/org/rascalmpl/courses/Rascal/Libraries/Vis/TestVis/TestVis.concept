Name: TestVis

Synopsis: List of visualization tests (for developers only).

Syntax:

Types:

Function:

Details:

Description:


Examples:
<figure test1.png 350x350>
render(box());
</figure>
![test](test1.png)

<figure test2.png 350x350>
render(box(shrink(0.5)));
</figure>
![test](test2.png)

<figure test3.png 350x350>
render(box( fillColor("green")));
</figure>
![test](test3.png)

<figure test4.png 350x350>
render(box(hshrink(0.7), vshrink(0.2),fillColor("green"), lineColor("red")));
</figure>
![test](test4.png)

<figure test5.png 350x350>
render(box(box(fillColor("white")), fillColor("mediumblue"), grow(1.5)));
</figure>
![test](test5.png)

/Unsized blue outer box with black inner text
<figure test6.png 350x350>
render(box(text("een label"), fillColor("mediumblue"), grow(1.2)));
</figure>
![test](test6.png)

Unsized blue outer box with white inner text

<figure test7.png 350x350>
render(box(text("een label", fontColor("white")), fillColor("mediumblue"),grow(1.2)));
</figure>
![test](test7.png)

<figure test8.png 350x350>
render(box(text("een label"),  fillColor("mediumblue"), grow(2.0),shrink(0.7)));
</figure>
![test](test8.png)

<figure test9.png 350x350>
render(box(box(fillColor("green"), lineColor("red")), grow(2.0,1.5)));
</figure>
![test](test9.png)

<figure test10.png 350x350>
render(box(box(fillColor("green"), lineColor("red"),left()), grow(2.0,1.5)));
</figure>
![test](test10.png)

<figure test11.png 350x350>
render(box(box(text("label"),fillColor("green"), lineColor("red"),  left(), top(),grow(1.2)), grow(2.0,1.5),resizable(false)));
</figure>
![test](test11.png)

<figure test12.png 350x350>
render(box(box(text("label"),fillColor("green"), lineColor("red"),  left(), bottom(),grow(1.2)), grow(2.0,1.5),resizable(false)));
</figure>
![test](test12.png)

<figure test13.png 350x350>
render(box(box(text("label"),fillColor("green"), lineColor("red"),  left(), right(),grow(1.2)), grow(2.0,1.5),vresizable(false)));
</figure>
![test](test13.png)


<figure test14.png 350x350>
render(box(box(text("label"),fillColor("green"), lineColor("red"),  left(), right(),top(),grow(1.2)), grow(2.0,1.5)));
</figure>
![test](test14.png)

<figure test15.png 350x350>
render(box(box(text("label"),fillColor("green"), lineColor("red"),  left(), right(),grow(1.2)), grow(2.0,1.5),width(100.0),height(100.0),hresizable(false)));
</figure>
![test](test15.png)

<figure test16.png 350x350>
render(box(box(text("label"),fillColor("green"), lineColor("red"),  left(), right(),grow(1.2)), grow(2.0,1.5),width(100.0),height(300.0),resizable(false)));
</figure>
![test](test16.png)

<figure test17.png 350x350>
render(box(box( fillColor("green"), lineColor("red"), right(), bottom()), grow(1.3),size(300.0,200.0),resizable(false)));
</figure>
![test](test17.png)

<figure test18.png 350x350>
h = hcat([box(fillColor("mediumblue")),box(fillColor(rgb(0, 0, 205))),box(fillColor(rgb(0, 0, 205, 0.5))),box(fillColor(color("mediumblue",0.5)))],std(lineWidth(2)));
render(h);
</figure>
![test](test18.png)

<figure test19.png 350x350>
h = hcat([
box(fillColor(color("mediumblue", 0.05))),
box(fillColor(color("mediumblue", 0.2))),
box(fillColor(color("mediumblue", 0.4))),
box(fillColor(color("mediumblue", 0.6))),
box(fillColor(color("mediumblue", 0.8))),
box(fillColor(color("mediumblue", 1.0)))
] );
render(h);
</figure>
![test](test19.png)
<figure testabc.png 500x200>
h = hcat([
	         box(fillColor(gray(125, 0.05))),
	                 box(fillColor(gray(125, 0.2))),
	                 box(fillColor(gray(125, 0.4))),
	                 box(fillColor(gray(125, 0.6))),
	                 box(fillColor(gray(125, 0.8))),
	                 box(fillColor(gray(125, 1.0))) 
	                ]);
render(h);
</figure>
![test](testabc.png)
<figure testdef.png 500x200>
h = hcat(  [ box(vshrink(0.2),hshrink(0.5), fillColor("red"),top()),
			        box(vshrink(0.8),top()),
			        box(shrink(0.1,0.5), fillColor("green"),top())
			      ],
			      std(fillColor("yellow")), hgrow(1.1));
render(h	);
</figure>
![test](testdef.png)
<figure test21.png 350x350>
h = hcat(  [ box(vshrink(0.2),hshrink(0.5), fillColor("red"),bottom()),
			        box(vshrink(0.8),bottom()),
			        box(shrink(0.1,0.5), fillColor("green"),bottom())
			      ],
			      std(fillColor("yellow")), hgrow(1.1));
render(h);
</figure>
![test](test21.png)

<figure test22.png 350x350>
h = hcat(  [ box(vshrink(0.2),hshrink(0.5), fillColor("red"),vcenter()),
			        box(vshrink(0.8),vcenter()),
			        box(shrink(0.1,0.5), fillColor("green"),vcenter())
			      ],
			      std(fillColor("yellow")), hgrow(1.1));
render(h);
</figure>
![test](test22.png)
<figure test23.png 350x350>
h = hcat(  [ box(size(100,200), fillColor("red")),
			        box(align(0.5,1.0), size(150,100)),
			        hcat([box(size(200,50), fillColor("green")),
			              box(size(50,100), fillColor("yellow"))
			             ], std(bottom())
			            )
			      ],
			      gap(10),std(top()),std(vresizable(false)));
render(h);
</figure>
![test](test23.png)
<figure test24.png 350x350>
h =hcat(  [ box(size(100,200), fillColor("red")),
			        box(align(0.5,1.0), size(150,100)),
			        hcat([box(size(200,50), fillColor("green")),
			              box(size(50,100), fillColor("yellow"))
			             ], std(bottom())
			            )
			      ],
			      gap(10),std(vresizable(false))
		);
render(h);
</figure>
![test](test24.png)

<figure test25.png 350x350>
h =hcat(  [ box(align(0.0, 0.1), size(100,100), fillColor("red")),
			        box(align(0.0, 0.2), size(100,100)),
			        box(align(0.0, 0.3), size(100,100), fillColor("green")),
			        box(align(0.0, 0.4), size(100,100), fillColor("yellow"))
			      ],
			      gap(10),vsize(200),std(vresizable(false))
		);
render(h);
</figure>
![test](test25.png)


<figure test26.png 350x350>
h =vcat( [ box(size(100,200), fillColor("red")),
			       box(size(150, 100), fillColor("blue")),
			       box(size(200,50), fillColor("green"))
			     ],
			     std(left()), gap(2),std(resizable(false))
		);
render(h);
</figure>
![test](test26.png)


<figure test27.png 350x350>
h =vcat( [ box(size(100,200), fillColor("red")),
			       vcat([ box(size(150,100)),
			              box(size(50,50)),  
			              box(size(30,30))
			            ],
			            std(right())),
			       box(size(200,50), fillColor("green"))
			      ],
			      gap(10),std(left()),std(resizable(false))
		);
render(h);
</figure>
![test](test27.png)


<figure test28.png 350x350>
h =hcat([ box(size(100,250), fillColor("red")),
	              vcat([ hcat( [ box(size(50, 100), fillColor("blue")),
			                     box(size(100, 50), fillColor("blue"))
			                   ],
			                   std(vcenter())),
			             box(size(250,50), fillColor("green"))
			           ],
			           std(right()), gap(30)),
			      box(size(100,100), fillColor("yellow"))
			    ],
			    std(bottom()), gap(10),std(resizable(false)));
render(h);
</figure>
![test](test28.png)



<figure test30.png 350x350>
h =overlay([ box(shrink(0.5,0.3), fillColor("green")), 
         box(shrink(0.3,0.5) ,fillColor("red"))
       ],
       std(center()));
render(h);
</figure>
![test](test30.png)

<figure test31.png 350x350>
h =overlay( [ box(size(100,250), fillColor("red")),
  vcat([ box(size(150,100)),
         box(size(50,50)),  
         box(size(30,30))
       ],
       std(right())), 
 box(size(150,5), fillColor("green"))
],
gap(10),std(left()),std(resizable(false)));
render(h);
</figure>
![test](test31.png)

<figure test32.png 350x350>
render(ellipse(text("een label", fontColor("white")),fillColor("mediumblue"), grow(1.2)));
</figure>
![test](test32.png)

Benefits:

Pitfalls:

Questions:

