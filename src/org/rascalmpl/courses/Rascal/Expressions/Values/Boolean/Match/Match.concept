Name: Match

Synopsis: Match a pattern against an expression.

Syntax:
`$Pat$ := $Exp$`

Types:
| `$Pat$`   | `$Exp$` |`$Pat$ := $Exp$`|
|:----------|:--------|:---------------|
| [Patterns] | `value` | `bool`        |

Function:

Details:

Description:
See [PatternMatching] for an introduction to pattern matching and [Patterns] for a complete description.

Examples:
<screen>
123 := 456;
[10, N*, 50] := [10, 20, 30, 40, 50];
{10, set[int] S, 50} := {50, 40, 30, 30, 10};
</screen>
Benefits:

Pitfalls:

Questions:

QValue:
desc: Determine the number of strings that contain "a".
list:
text = ["andra", "moi", "ennepe", "Mousa", "polutropon"];
public int count(list[str] text){
  n = 0;
  for(s <- text)
    if(<?> := s)
      n +=1;
  return n;
}
test: count(text) == 2;