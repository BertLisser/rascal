Name: SuperList

Synopsis: The super list operator on lists.

Syntax:
`$Exp_1$ >= $Exp_2$`

Types:
| `$Exp_1$`     |  `$Exp_2$`     | `$Exp_1$ >= $Exp_2$` |
|:--------------|:---------------|:---------------------|
| `list[$T_1$]` |  `list[$T_2$]` | `bool`               |

Function:

Details:

Description:
Yields `true` if the value of $Exp_2$ is equal to or a sublist of the value of $Exp_1$,  and `false` otherwise.

Examples:
<screen>
[1, 2, 3, 4] >= [1, 2, 3];
[1, 2, 3, 4] >= [1, 2, 3, 4];
[1, 2, 3, 4] >= [1, 2, 3];
[1, 2, 3, 4, 5] >= [1, 3, 5]
</screen>

Benefits:

Pitfalls:

Questions:
QType: <A:list[arb]> >= <B:same[A]>


QValue:
prep: import Set;
make: DIFF = set[int[0,100]]
make: B = same[DIFF]
expr: A = toList(<B> + <DIFF>)
expr: B1 = toList(<B>)
expr: C =  <A> >= <B1>
hint: <C>
test: <A> >= <B1> == <?>

QValue:
make: A = list[arb[int,str,bool]]
expr: C = <A> >= <A>
hint: <C>
test: <A> >= <A>