[choiceQuestion("Rascal/Expressions/Values/List","1","  The type of a list is determined by:\n",[good("The least upper bound of the type of all elements."),good("The types of all the elements in the list."),bad("The type of the element that was first added to the list."),bad("The average of the type of the elements with the smallest and the largest type."),bad("The least upper bound of the type of two arbitrary elements."),bad("The type of two arbitrary elements.")]),tvQuestion("Rascal/Expressions/Values/List","2",valueOfExpr(),details(" Fill in the missing operator.\n",[],"","","\<A\> "," \<B\> == \<C\>",false,true,[<"B",arb(0,[int(0,100),str()])>,<"A",list(same("B"),1,5)>],[<"C","\<A\> + \<B\>">],void(),"Use +.")),tvQuestion("Rascal/Expressions/Values/List","3",valueOfExpr(),details(" Fill in the missing operator.\n",["import Set;"],"","","\<A1\> "," \<B1\> == \<C\>",false,true,[<"DIFF",set(int(0,100),1,5)>,<"A",same("DIFF")>,<"B",same("DIFF")>],[<"A1","toList(\<DIFF\> + \<A\>)">,<"B1","toList(\<B\> + \<DIFF\>)">,<"C","\<A1\> - \<B1\>">],void(),"Use -.")),tvQuestion("Rascal/Expressions/Values/List","4",valueOfExpr(),details(" Fill in the missing operator.\n",["import List;"],"","","(\<A\> "," \<B\>) == \<C\>",false,true,[<"A",list(int(0,100),1,5)>],[<"B","reverse(\<A\>)">,<"C","\<A\> == \<B\>">],void(),"Use ==.")),tvQuestion("Rascal/Expressions/Values/List","5",valueOfExpr(),details(" Fill in the missing operator.\n",["import Set;"],"","","\<A1\> "," \<B1\> == \<C\>",false,true,[<"DIFF",set(int(0,100),1,5)>,<"A",same("DIFF")>,<"B",same("DIFF")>],[<"A1","toList(\<DIFF\> + \<A\>)">,<"B1","toList(\<B\> + \<DIFF\>)">,<"C","\<A1\> & \<B1\>">],void(),"Use &.")),tvQuestion("Rascal/Expressions/Values/List","6",valueOfExpr(),details(" Fill in the missing operator.\n",["import Set;"],"","","\<ELM\> "," \<A1\> == \<C\>",false,true,[<"ELM",int(0,100)>,<"A",set(same("ELM"),1,5)>],[<"A1","toList( {\<ELM\>} + \<A\>)">,<"C","\<ELM\> in \<A1\>">],void(),"Use in.")),tvQuestion("Rascal/Expressions/Values/List","7",valueOfExpr(),details(" Fill in the missing operator.\n",["import Set;"],"","","\<A1\> "," \<B\> == \<C\>",false,true,[<"DIFF",set(int(0,100),1,5)>,<"A",same("DIFF")>],[<"A1","toList(\<A\>)">,<"B","toList(\<A\> + \<DIFF\>)">,<"C","\<A1\> \< \<B\>">],void(),"\<C\>")),tvQuestion("Rascal/Expressions/Values/List","8",valueOfExpr(),details(" Fill in the missing operator.\n",[],"","","\<A\> "," \<B\> == \<C\>",false,true,[<"A",list(arb(0,[int(-20,20),str()]),1,5)>,<"B",same("A")>],[<"C","\<A\> + \<B\>">],void(),"Use +.")),tvQuestion("Rascal/Expressions/Values/List","9",valueOfExpr(),details(" Fill in the missing operator.\n",["import Set;"],"","","\<ELM\> "," \<A\> == \<C\>",false,true,[<"ELM",int(0,10)>,<"A",list(same("ELM"),1,5)>],[<"C","\<ELM\> notin \<A\>">],void(),"Use notin."))]