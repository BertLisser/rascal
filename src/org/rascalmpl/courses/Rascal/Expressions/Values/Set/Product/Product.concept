Name: Product

Synopsis: The product of two set values.

Syntax:
`$Exp_1$ * $Exp_2$`

Types:
| `$Exp_1$`    |  `$Exp_2$`    | `$Exp_1$ * $Exp_2$` |
|:-------------|:--------------|:--------------------|
| `set[$T_1$]` |  `set[$T_2$]` | `rel[$T_1$,$T_2$]`  |

Function:

Details:

Description:
Yields a relation resulting from the product of the values of $Exp_1$ and $Exp_2$. It contains a tuple for each combination of values from both arguments.

Examples:
<screen>
{1, 2, 3} * {4, 5, 6};
</screen>
A card deck can be created as follows:
<screen>
{"clubs", "hearts", "diamonds", "spades"} * {1,2,3,4,5,6,7,8,9,10,11,12,13};
</screen>

Benefits:

Pitfalls:

Questions:

QType: <A:list[arb[int,str,bool]]> * <B:same[A]>

QValue: 
make: A = set[int[0,50]]
make: B = int[0,50]
expr: C = <A> * {<B>}
hint: <C>
test:  <A> * {<B>} == <?>

QValue: 
make: A = set[int[0,50]]
make: B = int[0,50]
make: C = int[0,50]
expr: D = <A> * {<B>, <C>}
hint: <D>
test:  <A> * {<B>, <C>} == <?>

QValue: 
prep: import Set;
make: A = set[int[0,50]]
make: B = same[A]
expr: C = size(<A> * <B>)
hint: <C>
test:  size(<A> * <B>) == <?>
