Name: GreaterThanOrEqual

Synopsis: Greater than or equal operator on values.

Syntax:
`$Exp_1$ >= $Exp_2$`

Types:
| `$Exp_1$` | `$Exp_2$` | `$Exp_1$ >= $Exp_2$` |
|:----------|:----------|:---------------------|
| `value`   |  `value`  | `bool`               |

Function:

Details:

Description:
By brute force, a total less than operator between two values $V_1$ and $V_2$ of arbitrary types $T_1$ and $T_2$ is defined:

* If the types $T_1$ and $T_2$ can be compared then $V_1$ less than $V_2$ is used.

* Otherwise values are ordered according their type name, for instance, `int` is smaller than `list`, and `map` is smaller than `rel`.


Greater than or equal yields `true` if the value of $Exp_2$ is strictly less
than (according to the ordering defined above) the value of $Exp_1$ or if both values are equal, and `false` otherwise.

Examples:
<screen>
// Introduce two variables `X`, `Y` and `Z` and force them to be of type `value`:
value X = "def";
value Y = "abc";
value Z = 3.14;
// Now compare `X` and `Y`:
X >= Y;
// and `X` and `Z`:
X >= Z;
</screen>

Benefits:

Pitfalls:

Questions:

