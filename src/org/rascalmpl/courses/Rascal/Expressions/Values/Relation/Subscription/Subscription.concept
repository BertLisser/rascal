Name: Subscription

Synopsis: Indexing of a relation via tuple values.

Syntax:
# `$Exp_0$ [ $Exp_1$, $Exp_2$, ... $Exp_n$]`

# `$Exp_0$ [ $Exp_1$]`

Types:
===Variant 1===
| `$Exp_0$`                         | `$Exp_1$` | `$Exp_2$` | ... | `$Exp_0$ [ $Exp_1$, $Exp_2$, ... ]` |
|:----------------------------------|:----------|:----------------------|
| `rel[$T_1$, $T_2$, ... $T_m$]`    | `int`     |  `int`    | ... | `rel[$T_n$, $T_n+1$, ... $T_m$]` |

===Variant 2===
| `$Exp_0$`                         | `$Exp_1$`     | `$Exp_0$ [ $Exp_1$ ]`            |
|:----------------------------------|:--------------|:---------------------------------|
| `rel[$T_1$, $T_2$, ... $T_m$]`    | `set[$T_1$]`  | `rel[$T_2$, $T_2$, ... $T_m$]`   |

Function:

Details:

Description:
Relation resulting from subscription of a relation $Exp_0$.

===Variant 1===
Subscription with the index values of $Exp_1$, $Exp_2$, .... 
The result is a relation with all tuples that have these index values as first elements 
with the index values removed from the tuple. 
If the resulting tuple has only a single element, a set is returned instead of a relation. 
A wildcard `_` as index value matches all possible values at that index position.

===Variant 2===
Subscription with a set of the index values of $Exp_1$.
The result is a relation with all tuples that have these index values as first element
with the index values removed from the tuple. 

Examples:
<screen>
R = {<1,10>, <2,20>, <1,11>, <3,30>, <2,21>};
R[1];
R[{1}];
R[{1, 2}];
RR = {<1,10,100>,<1,11,101>,<2,20,200>,<2,22,202>,
              <3,30,300>};
RR[1];
RR[1,_];
// Introduce a relation with economic data and assign it to `GDP`:
rel[str country, int year, int amount] GDP =
{<"US", 2008, 14264600>, <"EU", 2008, 18394115>,
 <"Japan", 2008, 4923761>, <"US", 2007, 13811200>, 
 <"EU", 2007, 13811200>, <"Japan", 2007, 4376705>};
// and then retrieve the information for the index `"Japan"`:
GDP["Japan"];
// or rather for the indices `"Japan"` and `2008`:
GDP["Japan", 2008];
</screen>

Benefits:

Pitfalls:

Questions:

QValue:
desc: Using the above example with GDP values:
prep: rel[str country, int year, int amount] GDP = {<"US", 2008, 14264600>, <"EU", 2008, 18394115>,<"Japan", 2008, 4923761>, <"US", 2007, 13811200>, <"EU", 2007, 13811200>, <"Japan", 2007, 4376705>};
expr: H = GDP["US"]
hint: <H>
test: GDP["US"] == <?>

QValue:
desc: Using the above example with GDP values:
prep: rel[str country, int year, int amount] GDP = {<"US", 2008, 14264600>, <"EU", 2008, 18394115>,<"Japan", 2008, 4923761>, <"US", 2007, 13811200>, <"EU", 2007, 13811200>, <"Japan", 2007, 4376705>};
expr: H = GDP["US",2008]
hint: <H>
test: GDP["US",2008] == <?>

